# Links to DESeq2 outputs containing transcript IDs and data with headers
# If no headers, change second line of import_DEGs() definition
filepath1 <- "C:/Users/acoyl/Documents/GitHub/hemat_bairdii_transcriptome/graphs/amb_v_low_day02/Amb_vsLow_DEGlist_wcols.txt"
filepath2 <- "C:/Users/acoyl/Documents/GitHub/hemat_bairdii_transcriptome/graphs/day0_day17_ambient/0vs17_DEGlist_wcols.txt"
filepath3 <- "C:/Users/acoyl/Documents/GitHub/hemat_bairdii_transcriptome/graphs/elev_v_amb_day02/Elev_vsAmb_DEGlist_wcols.txt"
filepath4 <- "C:/Users/acoyl/Documents/GitHub/hemat_bairdii_transcriptome/graphs/elev_v_low_day02/Elev_vsLow_DEGlist_wcols.txt"
# Use our created function to import vector of DEG transcript IDs
trans_one <- import_DEGs(filepath1)
trans_two <- import_DEGs(filepath2)
trans_three <- import_DEGs(filepath3)
trans_four <- import_DEGs(filepath4)
# Check how much our time-comparison genes overlap with
# temperature-comparison genes
sum(trans_two %in% trans_one)
sum(trans_two %in% trans_three)
sum(trans_two %in% trans_four)
# Create list of all DEGs from temperature comparisons
temp_DEGs <- list(trans_one, trans_three, trans_four)
# Create Venn diagram
venn.diagram(x = temp_DEGs,
# Title and labels
main = "Day 0/2 Individual DEGs - Transcript ID Overlap",
main.cex = 1.25,
cat.pos = c(0, 0, 180),
category.names = c("Ambient vs. Low",
"Elevated vs. Ambient",
"Elevated vs. Low"),
# Circles
lwd = 2,
lty = "blank",
fill = c("#FF949B", "#358AB8", "#FFFDAD"),
euler.d = TRUE,
scaled = TRUE,
# Numbers
cex = 1.5,
fontface = "bold",
fontfamily = "sans",
# Output features
filename = "Transcript_DEGs.png",
height = 3000,
width = 3000,
resolution = 500,
output = TRUE)
#### PART 2: OVERLAP IN ACCESSION IDS ###############################
# Links to newline-separated file of accession IDs
filepath1 <- "C:/Users/acoyl/Documents/GitHub/hemat_bairdii_transcriptome/output/signif_accession_ids/Amb_vsLow_DEG_IDs.txt"
filepath2 <- "C:/Users/acoyl/Documents/GitHub/hemat_bairdii_transcriptome/output/signif_accession_ids/day0_day17_amb_DEG_IDs.txt"
filepath3 <- "C:/Users/acoyl/Documents/GitHub/hemat_bairdii_transcriptome/output/signif_accession_ids/Elev_vsAmb_DEG_IDs.txt"
filepath4 <- "C:/Users/acoyl/Documents/GitHub/hemat_bairdii_transcriptome/output/signif_accession_ids/Elev_vsLow_DEG_IDs.txt"
# Use our created function to import vector of DEG Accession IDs
trans_one <- read.table(file = filepath1, header = FALSE, sep = "\t")
View(trans_one)
# Use our created function to import vector of DEG Accession IDs
trans_one <- read.table(file = filepath1, header = FALSE, sep = "\t")
trans_two <- read.table(file = filepath2, header = FALSE, sep = "\t")
trans_three <- read.table(file = filepath3, header = FALSE, sep = "\t")
trans_four <- read.table(file = filepath4, header = FALSE, sep = "\t")
# Check how much our time-comparison genes overlap with
# temperature-comparison genes
sum(trans_two %in% trans_one)
sum(trans_two %in% trans_three)
sum(trans_two %in% trans_four)
View(trans_one)
View(trans_two)
View(trans_three)
View(trans_one)
# Create list of all DEGs from temperature comparisons
temp_DEGs <- list(trans_one, trans_three, trans_four)
# Create Venn diagram
venn.diagram(x = temp_DEGs,
# Title and labels
main = "Day 0/2 Individual DEGs - Transcript ID Overlap",
main.cex = 1.25,
cat.pos = c(0, 0, 180),
category.names = c("Ambient vs. Low",
"Elevated vs. Ambient",
"Elevated vs. Low"),
# Circles
lwd = 2,
lty = "blank",
fill = c("#FF949B", "#358AB8", "#FFFDAD"),
euler.d = TRUE,
scaled = TRUE,
# Numbers
cex = 1.5,
fontface = "bold",
fontfamily = "sans",
# Output features
filename = "AccessionIDs_DEGs.png",
height = 3000,
width = 3000,
resolution = 500,
output = TRUE)
# Use our created function to import vector of DEG Accession IDs
trans_one <- unlist(read.table(file = filepath1, header = FALSE, sep = "\t"))
trans_two <- unlist(read.table(file = filepath2, header = FALSE, sep = "\t"))
trans_three <- unlist(read.table(file = filepath3, header = FALSE, sep = "\t"))
trans_four <- unlist(read.table(file = filepath4, header = FALSE, sep = "\t"))
# Check how much our time-comparison genes overlap with
# temperature-comparison genes
sum(trans_two %in% trans_one)
sum(trans_two %in% trans_three)
sum(trans_two %in% trans_four)
# Check how much our time-comparison genes overlap with
# temperature-comparison genes
sum(trans_two %in% trans_one)
sum(trans_two %in% trans_three)
sum(trans_two %in% trans_four)
# Use our created function to import vector of DEG transcript IDs
trans_one <- import_DEGs(filepath1)
trans_two <- import_DEGs(filepath2)
trans_three <- import_DEGs(filepath3)
trans_four <- import_DEGs(filepath4)
# Check how much our time-comparison genes overlap with
# temperature-comparison genes
sum(trans_two %in% trans_one)
sum(trans_two %in% trans_three)
sum(trans_two %in% trans_four)
#### PART 1: OVERLAP IN TRANSCRIPT IDs #############################
# Links to DESeq2 outputs containing transcript IDs and data with headers
# If no headers, change second line of import_DEGs() definition
filepath1 <- "C:/Users/acoyl/Documents/GitHub/hemat_bairdii_transcriptome/graphs/amb_v_low_day02/Amb_vsLow_DEGlist_wcols.txt"
filepath2 <- "C:/Users/acoyl/Documents/GitHub/hemat_bairdii_transcriptome/graphs/day0_day17_ambient/0vs17_DEGlist_wcols.txt"
filepath3 <- "C:/Users/acoyl/Documents/GitHub/hemat_bairdii_transcriptome/graphs/elev_v_amb_day02/Elev_vsAmb_DEGlist_wcols.txt"
filepath4 <- "C:/Users/acoyl/Documents/GitHub/hemat_bairdii_transcriptome/graphs/elev_v_low_day02/Elev_vsLow_DEGlist_wcols.txt"
# Use our created function to import vector of DEG transcript IDs
trans_one <- import_DEGs(filepath1)
trans_two <- import_DEGs(filepath2)
trans_three <- import_DEGs(filepath3)
trans_four <- import_DEGs(filepath4)
# Check how much our time-comparison genes overlap with
# temperature-comparison genes
sum(trans_two %in% trans_one)
sum(trans_two %in% trans_three)
sum(trans_two %in% trans_four)
trans_two %in% trans_four
trans_four[trans_two %in% trans_four]
trans_four
trans_two[trans_two %in% trans_four]
#### PART 2: OVERLAP IN ACCESSION IDS ###############################
# Links to newline-separated file of accession IDs
filepath1 <- "C:/Users/acoyl/Documents/GitHub/hemat_bairdii_transcriptome/output/signif_accession_ids/Amb_vsLow_DEG_IDs.txt"
filepath2 <- "C:/Users/acoyl/Documents/GitHub/hemat_bairdii_transcriptome/output/signif_accession_ids/day0_day17_amb_DEG_IDs.txt"
filepath3 <- "C:/Users/acoyl/Documents/GitHub/hemat_bairdii_transcriptome/output/signif_accession_ids/Elev_vsAmb_DEG_IDs.txt"
filepath4 <- "C:/Users/acoyl/Documents/GitHub/hemat_bairdii_transcriptome/output/signif_accession_ids/Elev_vsLow_DEG_IDs.txt"
# Use our created function to import vector of DEG Accession IDs
# Using unlist to make it a vector, since we're reading in directly
trans_one <- unlist(read.table(file = filepath1, header = FALSE, sep = "\t"))
trans_two <- unlist(read.table(file = filepath2, header = FALSE, sep = "\t"))
trans_three <- unlist(read.table(file = filepath3, header = FALSE, sep = "\t"))
trans_four <- unlist(read.table(file = filepath4, header = FALSE, sep = "\t"))
trans_two[trans_two %in% trans_four]
sum(trans_two %in% trans_four)
# Check how much our time-comparison genes overlap with
# temperature-comparison genes
sum(trans_two %in% trans_one)
sum(trans_two %in% trans_three)
sum(trans_two %in% trans_four)
# Create list of all DEGs from temperature comparisons
temp_DEGs <- list(trans_one, trans_three, trans_four)
# Create Venn diagram
venn.diagram(x = temp_DEGs,
# Title and labels
main = "Day 0/2 Individual DEGs - Transcript ID Overlap",
main.cex = 1.25,
cat.pos = c(0, 0, 180),
category.names = c("Ambient vs. Low",
"Elevated vs. Ambient",
"Elevated vs. Low"),
# Circles
lwd = 2,
lty = "blank",
fill = c("#FF949B", "#358AB8", "#FFFDAD"),
euler.d = TRUE,
scaled = TRUE,
# Numbers
cex = 1.5,
fontface = "bold",
fontfamily = "sans",
# Output features
filename = "AccessionIDs_DEGs.png",
height = 3000,
width = 3000,
resolution = 500,
output = TRUE)
# Create Venn diagram
venn.diagram(x = temp_DEGs,
# Title and labels
main = "Day 0/2 Individual DEGs - Accession ID Overlap",
main.cex = 1.25,
cat.pos = c(0, 0, 180),
category.names = c("Ambient vs. Low",
"Elevated vs. Ambient",
"Elevated vs. Low"),
# Circles
lwd = 2,
lty = "blank",
fill = c("#FF949B", "#358AB8", "#FFFDAD"),
euler.d = TRUE,
scaled = TRUE,
# Numbers
cex = 1.5,
fontface = "bold",
fontfamily = "sans",
# Output features
filename = "AccessionIDs_DEGs.png",
height = 3000,
width = 3000,
resolution = 500,
output = TRUE)
# Create Venn diagram
venn.diagram(x = temp_DEGs,
# Title and labels
main = "Day 0/2 Individual DEGs - Accession ID Overlap",
main.cex = 1.25,
cat.pos = c(-90, -90, 180),
category.names = c("Ambient vs. Low",
"Elevated vs. Ambient",
"Elevated vs. Low"),
# Circles
lwd = 2,
lty = "blank",
fill = c("#FF949B", "#358AB8", "#FFFDAD"),
euler.d = TRUE,
scaled = TRUE,
# Numbers
cex = 1.5,
fontface = "bold",
fontfamily = "sans",
# Output features
filename = "AccessionIDs_DEGs.png",
height = 3000,
width = 3000,
resolution = 500,
output = TRUE)
# Create Venn diagram
venn.diagram(x = temp_DEGs,
# Title and labels
main = "Day 0/2 Individual DEGs - Accession ID Overlap",
main.cex = 1.25,
cat.pos = c(-30, 30, 180),
category.names = c("Ambient vs. Low",
"Elevated vs. Ambient",
"Elevated vs. Low"),
# Circles
lwd = 2,
lty = "blank",
fill = c("#FF949B", "#358AB8", "#FFFDAD"),
euler.d = TRUE,
scaled = TRUE,
# Numbers
cex = 1.5,
fontface = "bold",
fontfamily = "sans",
# Output features
filename = "AccessionIDs_DEGs.png",
height = 3000,
width = 3000,
resolution = 500,
output = TRUE)
# Create Venn diagram
venn.diagram(x = temp_DEGs,
# Title and labels
main = "Day 0/2 Individual DEGs - Accession ID Overlap",
main.cex = 1.25,
cat.pos = c(-30, 30, 180),
cat.fontface = "bold",
category.names = c("Ambient vs. Low",
"Elevated vs. Ambient",
"Elevated vs. Low"),
# Circles
lwd = 2,
lty = "blank",
fill = c("#FF949B", "#358AB8", "#FFFDAD"),
euler.d = TRUE,
scaled = TRUE,
# Numbers
cex = 1.5,
fontface = "bold",
fontfamily = "sans",
# Output features
filename = "AccessionIDs_DEGs.png",
height = 3000,
width = 3000,
resolution = 500,
output = TRUE)
# Absolute path that leads to DESeq2 output file
deseq_output_filepath <- "C:/Users/acoyl/Documents/GitHub/hemat_bairdii_transcriptome/graphs/elev_v_low_day02/Elev_vsLow_DEGlist_wcols.txt"
# Absolute path that leads to transcript ID/gene ID table
blast_filepath <- "C:/Users/acoyl/Documents/GitHub/hemat_bairdii_transcriptome/data/cbai_hemat_diamond_blastx_table_transcriptome_v3.0.txt"
# Read output file into R
transcript_data <- read.table(deseq_output_filepath,
header = TRUE, sep = "\t")
# Transcript IDs are rownames - move them into first column
transcript_data <- tibble::rownames_to_column(transcript_data,
"Transcript_ID")
# Read BLAST data into R
blast_data <- read.table(blast_filepath, header = FALSE,
sep = "\t")
View(blast_data)
duplicated(blast_data$V2)
sum(duplicated(blast_data$V2))
View(blast_data)
unique(temp_DEGs)
#### PART 2: OVERLAP IN ACCESSION IDS ###############################
# Links to newline-separated file of accession IDs
filepath1 <- "C:/Users/acoyl/Documents/GitHub/hemat_bairdii_transcriptome/output/signif_accession_ids/Amb_vsLow_DEG_IDs.txt"
filepath2 <- "C:/Users/acoyl/Documents/GitHub/hemat_bairdii_transcriptome/output/signif_accession_ids/day0_day17_amb_DEG_IDs.txt"
filepath3 <- "C:/Users/acoyl/Documents/GitHub/hemat_bairdii_transcriptome/output/signif_accession_ids/Elev_vsAmb_DEG_IDs.txt"
filepath4 <- "C:/Users/acoyl/Documents/GitHub/hemat_bairdii_transcriptome/output/signif_accession_ids/Elev_vsLow_DEG_IDs.txt"
# Use our created function to import vector of DEG Accession IDs
# Using unlist to make it a vector, since we're reading in directly
trans_one <- unlist(read.table(file = filepath1, header = FALSE, sep = "\t"))
trans_two <- unlist(read.table(file = filepath2, header = FALSE, sep = "\t"))
trans_three <- unlist(read.table(file = filepath3, header = FALSE, sep = "\t"))
trans_four <- unlist(read.table(file = filepath4, header = FALSE, sep = "\t"))
# Check how much our time-comparison genes overlap with
# temperature-comparison genes
sum(trans_two %in% trans_one)
sum(trans_two %in% trans_three)
sum(trans_two %in% trans_four)
# Create list of all DEGs from temperature comparisons
temp_DEGs <- list(trans_one, trans_three, trans_four)
# Create Venn diagram
venn.diagram(x = temp_DEGs,
# Title and labels
main = "Day 0/2 Individual DEGs - Accession ID Overlap",
main.cex = 1.25,
cat.pos = c(-30, 30, 180),
cat.fontface = "bold",
category.names = c("Ambient vs. Low",
"Elevated vs. Ambient",
"Elevated vs. Low"),
# Circles
lwd = 2,
lty = "blank",
fill = c("#FF949B", "#358AB8", "#FFFDAD"),
euler.d = TRUE,
scaled = TRUE,
# Numbers
cex = 1.5,
fontface = "bold",
fontfamily = "sans",
# Output features
filename = "AccessionIDs_DEGs.png",
height = 3000,
width = 3000,
resolution = 500,
output = TRUE)
unique(temp_DEGs)
sum(unique(temp_DEGs))
count(unique(temp_DEGs))
# How many unique Accession IDs do we have for our DEGs?
temp_DEGs %>%
summarize(count = n())
# How many unique Accession IDs do we have for our DEGs?
temp_DEGs %>%
summarise(count = n())
# How many unique Accession IDs do we have for our DEGs?
aggregate(data.frame(count = temp_DEGs), list(value = temp_DEGs), length)
# How many unique Accession IDs do we have for our DEGs?
all_IDs <- c(trans_one, trans_two, trans_three, trans_four)
sum(unique(all_IDs))
unique(all_IDs)
length(unique(all_IDs))
# How many total Accession IDs do we have for our DEGs?
length(all_IDs)
# Percentage that are unique
length(unique(all_IDs)) / length(all_IDs)
#### FUNCTION DEFINITIONS ###########################
import_DEGs <- function(filepath) {
full_data <- read.table(file = filepath, header = TRUE, sep = "\t")
full_data <- tibble::rownames_to_column(full_data, "Transcript_ID")
transcripts <- full_data$Transcript_ID
return(transcripts)
}
#### PART 1: OVERLAP IN TRANSCRIPT IDs #############################
# Links to DESeq2 outputs containing transcript IDs and data with headers
# If no headers, change second line of import_DEGs() definition
filepath1 <- "C:/Users/acoyl/Documents/GitHub/hemat_bairdii_transcriptome/graphs/amb_v_low_day02/Amb_vsLow_DEGlist_wcols.txt"
filepath2 <- "C:/Users/acoyl/Documents/GitHub/hemat_bairdii_transcriptome/graphs/day0_day17_ambient/0vs17_DEGlist_wcols.txt"
filepath3 <- "C:/Users/acoyl/Documents/GitHub/hemat_bairdii_transcriptome/graphs/elev_v_amb_day02/Elev_vsAmb_DEGlist_wcols.txt"
filepath4 <- "C:/Users/acoyl/Documents/GitHub/hemat_bairdii_transcriptome/graphs/elev_v_low_day02/Elev_vsLow_DEGlist_wcols.txt"
# Use our created function to import vector of DEG transcript IDs
trans_one <- import_DEGs(filepath1)
trans_two <- import_DEGs(filepath2)
trans_three <- import_DEGs(filepath3)
trans_four <- import_DEGs(filepath4)
# Check how much our time-comparison genes overlap with
# temperature-comparison genes
sum(trans_two %in% trans_one)
sum(trans_two %in% trans_three)
trans_two[trans_two %in% trans_four]
sum(trans_two %in% trans_four)
# Create list of all DEGs from temperature comparisons
temp_DEGs <- list(trans_one, trans_three, trans_four)
# How many unique transcript IDs do we have for all our DEGs?
all_IDs <- c(trans_one, trans_two, trans_three, trans_four)
length(unique(all_IDs))
# How many total transcript IDs do we have for our DEGs?
length(all_IDs)
# Percentage that are unique
length(unique(all_IDs)) / length(all_IDs)
#### PART 2: OVERLAP IN ACCESSION IDS ###############################
# Links to newline-separated file of accession IDs
filepath1 <- "C:/Users/acoyl/Documents/GitHub/hemat_bairdii_transcriptome/output/signif_accession_ids/Amb_vsLow_DEG_IDs.txt"
filepath2 <- "C:/Users/acoyl/Documents/GitHub/hemat_bairdii_transcriptome/output/signif_accession_ids/day0_day17_amb_DEG_IDs.txt"
filepath3 <- "C:/Users/acoyl/Documents/GitHub/hemat_bairdii_transcriptome/output/signif_accession_ids/Elev_vsAmb_DEG_IDs.txt"
filepath4 <- "C:/Users/acoyl/Documents/GitHub/hemat_bairdii_transcriptome/output/signif_accession_ids/Elev_vsLow_DEG_IDs.txt"
# Use our created function to import vector of DEG Accession IDs
# Using unlist to make it a vector, since we're reading in directly
trans_one <- unlist(read.table(file = filepath1, header = FALSE, sep = "\t"))
trans_two <- unlist(read.table(file = filepath2, header = FALSE, sep = "\t"))
trans_three <- unlist(read.table(file = filepath3, header = FALSE, sep = "\t"))
trans_four <- unlist(read.table(file = filepath4, header = FALSE, sep = "\t"))
# Check how much our time-comparison genes overlap with
# temperature-comparison genes
sum(trans_two %in% trans_one)
sum(trans_two %in% trans_three)
sum(trans_two %in% trans_four)
# Create list of all DEGs from temperature comparisons
temp_DEGs <- list(trans_one, trans_three, trans_four)
# How many unique Accession IDs do we have for our DEGs?
all_IDs <- c(trans_one, trans_two, trans_three, trans_four)
length(unique(all_IDs))
# How many total Accession IDs do we have for our DEGs?
length(all_IDs)
# Percentage that are unique
length(unique(all_IDs)) / length(all_IDs)
library(tidyverse)
library(GSEABase)
library(topGO)
?GeneSet
library(tidyverse)
library(GSEABase)
# Set filepath
filepath1 <- "C:/Users/acoyl/Documents/GitHub/hemat_bairdii_transcriptome/output/signif_accession_ids/Amb_vsLow_GO_IDs.txt"
read.table(file = filepath1, header = FALSE)
test <- read.table(file = filepath1, header = FALSE)
View(test)
test <- read.table(file = filepath1, header = FALSE, sep = "\t")
test <- read.table(file = filepath1, header = FALSE, sep = ";")
View(test)
test <- read.tsv(file = filepath1, header = FALSE, sep = ";")
test <- read_tsv(file = filepath1, header = FALSE, sep = ";")
test <- read_tsv(file = filepath1, col_names = FALSE)
View(test)
test <- read_lines(file = filepath1)
test
strsplit(test, split = "\t")
?substring
strsplit(test, split = "\t") [[1]]
strsplit(test, split = "\t") [[1]][3]
strsplit(test, split = "\t") [[1]][1]
strsplit(test, split = "\t") [[1]][2]
test2 <- strsplit(test, split = "\t") [[1]][2]
test2
test2 <- strsplit(test, split = "\t")
View(test2)
test2[2]
test2[[1]]
test2[[1]][2]
test2[[1]][2][length -6]
int_stringtest2[[1]][2][length -6]
int_string <- test2[[1]][2][length -6]
int_string <- test2[[1]][2]
int_string
length(test2)
length(test2[[1]])
print(int_string)
int_string
for (i in 1:length(test2[[1]])) {
int_string <- test2[[1]][i]
int_string
}
print(int_string)
for (i in 1:length(test2[[1]])) {
int_string <- test2[[1]][i]
print(int_string)
}
library(topGO)
library(ALL)
BiocManager::install("ALL")
library(ALL)
library(topGO)
data(ALL)
View(ALL)
annotation(ALL)
topDiffGenes(geneList)
data(geneList)
geneList
ALL_pro_GO <- read.table(file = filepath1, header = FALSE)
# Set filepath
filepath1 <- "C:/Users/acoyl/Documents/GitHub/hemat_bairdii_transcriptome/output/signif_accession_ids/Amb_vsLow_GO_IDs.txt"
ALL_pro_GO <- read.table(file = filepath1, header = FALSE)
ALL_pro_GO <- read.table(file = filepath1, header = TRUE)
ALL_pro_GO <- read.table(file = filepath1, sep = "\n")
View(ALL_pro_GO)
# Read file of GO terms into R
ALL_pro_GO <- read.table(file = filepath1, sep = "\t")
View(ALL_pro_GO)
# Give our file column names
colnames(ALL_pro_GO) <- c("protein_ID", "GO_IDs")
View(ALL_pro_GO)
geneID2GO_bkgd <- readMappings(file = filepath1)
View(geneID2GO_bkgd)
?gsub
topgo_sig <- ALL_pro_GO
topgo_sig$GO_IDs <- gsub(";",",",topgo_sig$GO_IDs)
View(topgo_sig)
genesOfInterest <- topgo_sig
genesOfInterest <- as.character(genesOfInterest$protein_ID)
