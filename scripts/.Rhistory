# Day and temperature data for libraries
# 118, 132, 178, 334, 349, 359, 151, 254
exp_design <- data.frame(temp = factor(c("Amb", "Amb", "Amb",
"Amb", "Amb", "Amb",
"Low", "Low")),
day = factor(c(0, 0, 0, 2, 2, 2,
0, 2)))
deseq_analysis(kallisto_path = "../output/kallisto_indivlibs_transcriptome_v3.0/day02_amb_vs_low_matrix/kallisto.isoform.counts.matrix",
experiment_table = exp_design,
output_path = "../graphs/amb_v_low_day02",
variable = "Temp")
# Day and temperature data for libraries
# 118, 132, 178, 334, 349, 359, 151, 254
exp_design <- data.frame(temp = factor(c("Amb", "Amb", "Amb",
"Amb", "Amb", "Amb",
"Low", "Low")),
day = factor(c(0, 0, 0, 2, 2, 2,
0, 2)))
deseq_analysis(kallisto_path = "../output/kallisto_indivlibs_transcriptome_v3.0/day02_amb_vs_low_matrix/kallisto.isoform.counts.matrix",
experiment_table = exp_design,
output_path = "../graphs/amb_v_low_day02",
variable = "Temp")
# Day and temperature data for libraries
# 118, 132, 178, 334, 349, 359, 151, 254
exp_design <- data.frame(temp = factor(c("Amb", "Amb", "Amb",
"Amb", "Amb", "Amb",
"Low", "Low")),
day = factor(c(0, 0, 0, 2, 2, 2,
0, 2)))
deseq_analysis(kallisto_path = "../output/kallisto_indivlibs_transcriptome_v3.0/day02_amb_vs_low_matrix/kallisto.isoform.counts.matrix",
experiment_table = exp_design,
output_path = "../graphs/amb_v_low_day02",
variable = "temp")
# Day and temperature data for libraries
# 118, 132, 178, 334, 349, 359, 151, 254
exp_design <- data.frame(temp = factor(c("Amb", "Amb", "Amb",
"Amb", "Amb", "Amb",
"Low", "Low")),
day = factor(c(0, 0, 0, 2, 2, 2,
0, 2)))
# Functions are defined in hematodinium_analysis_functions.R
source("hematodinium_analysis_functions.R")
# Functions are defined in hematodinium_analysis_functions.R
source("hematodinium_analysis_functions.R")
# Functions are defined in hematodinium_analysis_functions.R
source("hematodinium_analysis_functions.R")
# Day and temperature data for libraries
# 118, 132, 178, 463, 481, 485 (in order)
# Order should match columns of Kallisto output matrix created by Trinity
exp_design <- data.frame(day = factor(c(0, 0, 0, 17, 17, 17)),
temp = factor(c("Amb", "Amb", "Amb", "Amb", "Amb", "Amb")))
deseq_analysis(kallisto_path = "../output/kallisto_indivlibs_transcriptome_v3.0/day0_day17_matrix/kallisto.isoform.counts.matrix",
experiment_table = exp_design,
output_path = "../graphs/day0_day17_ambient",
variable = "day")
deseq_analysis(kallisto_path = "../output/kallisto_indivlibs_transcriptome_v3.0/day0_day17_matrix/kallisto.isoform.counts.matrix",
experiment_table = exp_design,
output_path = "../graphs/day0_day17_ambient",
variable = "day")
deseq_analysis(kallisto_path = "../output/kallisto_indivlibs_transcriptome_v3.0/day0_day17_matrix/kallisto.isoform.counts.matrix",
experiment_table = exp_design,
output_path = "../graphs/day0_day17_ambient",
variable = day)
deseq_analysis(kallisto_path = "../output/kallisto_indivlibs_transcriptome_v3.0/day0_day17_matrix/kallisto.isoform.counts.matrix",
experiment_table = exp_design,
output_path = "../graphs/day0_day17_ambient",
variable = "~ day")
deseq_analysis(kallisto_path = "../output/kallisto_indivlibs_transcriptome_v3.0/day0_day17_matrix/kallisto.isoform.counts.matrix",
experiment_table = exp_design,
output_path = "../graphs/day0_day17_ambient",
variable = ~day)
deseq_analysis(kallisto_path = "../output/kallisto_indivlibs_transcriptome_v3.0/day0_day17_matrix/kallisto.isoform.counts.matrix",
experiment_table = exp_design,
output_path = "../graphs/day0_day17_ambient",
variable = as.formula(~day))
test <- as.formula(day)
test <- as.formula("day")
test <- as.formula(day)
test <- "~day"
test <- as.formula(day)
test <- as.formula(test)
deseq_analysis(kallisto_path = "../output/kallisto_indivlibs_transcriptome_v3.0/day0_day17_matrix/kallisto.isoform.counts.matrix",
experiment_table = exp_design,
output_path = "../graphs/day0_day17_ambient",
variable = as.formula("~day"))
# Day and temperature data for libraries
# 118, 132, 178, 463, 481, 485 (in order)
# Order should match columns of Kallisto output matrix created by Trinity
exp_design <- data.frame(day = factor(c(0, 0, 0, 17, 17, 17)),
temp = factor(c("Amb", "Amb", "Amb", "Amb", "Amb", "Amb")))
deseq_analysis(kallisto_path = "../output/kallisto_indivlibs_transcriptome_v3.0/day0_day17_matrix/kallisto.isoform.counts.matrix",
experiment_table = exp_design,
output_path = "../graphs/day0_day17_ambient",
variable = as.formula("~day"))
# Functions are defined in hematodinium_analysis_functions.R
source("hematodinium_analysis_functions.R")
# Day and temperature data for libraries
# 118, 132, 178, 463, 481, 485 (in order)
# Order should match columns of Kallisto output matrix created by Trinity
exp_design <- data.frame(day = factor(c(0, 0, 0, 17, 17, 17)),
temp = factor(c("Amb", "Amb", "Amb", "Amb", "Amb", "Amb")))
test <- "~day"
test <- as.formula(test)
deseq_analysis(kallisto_path = "../output/kallisto_indivlibs_transcriptome_v3.0/day0_day17_matrix/kallisto.isoform.counts.matrix",
experiment_table = exp_design,
output_path = "../graphs/day0_day17_ambient",
variable = as.formula("~day"))
# Day and temperature data for libraries
# 118, 132, 178, 334, 349, 359, 151, 254
exp_design <- data.frame(temp = factor(c("Amb", "Amb", "Amb",
"Amb", "Amb", "Amb",
"Low", "Low")),
day = factor(c(0, 0, 0, 2, 2, 2,
0, 2)))
deseq_analysis(kallisto_path = "../output/kallisto_indivlibs_transcriptome_v3.0/day02_amb_vs_low_matrix/kallisto.isoform.counts.matrix",
experiment_table = exp_design,
output_path = "../graphs/amb_v_low_day02",
variable = as.formula("~temp"))
# Day and temperature data for libraries
# 127, 173, 72, 272, 280, 294, 151, 254
exp_design <- data.frame(temp = factor(c("Elev", "Elev", "Elev",
"Elev", "Elev", "Elev",
"Low", "Low")),
day = factor(c(0, 0, 0, 2, 2, 2, 0, 2)))
deseq_analysis(kallisto_path = "../output/kallisto_indivlibs_transcriptome_v3.0/day02_elev_vs_low_matrix/kallisto.isoform.counts.matrix",
experiment_table = exp_design,
output_path = "../graphs/elev_v_low_day02",
variable = as.formula("~temp"))
# Day and temperature data for libraries
# 127, 173, 72, 272, 280, 294, 118, 132, 178, 334, 349, 359
exp_design <- data.frame(temp = factor(c("Elev", "Elev", "Elev",
"Elev", "Elev", "Elev",
"Amb", "Amb", "Amb", "Amb",
"Amb", "Amb")),
day = factor(c(0, 0, 0, 2, 2, 2,
0, 0, 0, 2, 2, 2)))
deseq_analysis(kallisto_path = "../output/kallisto_indivlibs_transcriptome_v3.0/day02_elev_vs_amb_matrix/kallisto.isoform.counts.matrix",
experiment_table = exp_design,
output_path = "../graphs/elev_v_amb_day02",
variable = as.formula("~temp"))
# Ambient vs. Low Temperature
transcripts_to_geneIDs(deseq_filepath = "../graphs/amb_v_low_day02/DEGlist_wcols.txt",
blast_filepath = "../data/cbai_hemat_diamond_blastx_table_transcriptome_v3.0.txt",
output_path = "../output/signif_accession_ids/Amb_vsLow_DEG_IDs.txt")
# Ambient vs. Low Temperature
transcripts_to_geneIDs(deseq_filepath = "../graphs/amb_v_low_day02/DEGlist_wcols.txt",
blast_filepath = "../data/cbai_hemat_diamond_blastx_table_transcriptome_v3.0.txt",
output_path = "../output/signif_accession_ids/Amb_vsLow_DEG_IDs.txt")
# Absolute path that leads to DESeq2 output file
deseq_output_filepath <- "C:/Users/acoyl/Documents/GitHub/hemat_bairdii_transcriptome/graphs/elev_v_low_day02/Elev_vsLow_DEGlist_wcols.txt"
# Absolute path that leads to transcript ID/gene ID table
blast_filepath <- "C:/Users/acoyl/Documents/GitHub/hemat_bairdii_transcriptome/data/cbai_hemat_diamond_blastx_table_transcriptome_v3.0.txt"
# Read output file into R
transcript_data <- read.table(deseq_output_filepath,
header = TRUE, sep = "\t")
# Absolute path that leads to transcript ID/gene ID table
blast_filepath <- "../data/cbai_hemat_diamond_blastx_table_transcriptome_v3.0.txt"
# Absolute path that leads to DESeq2 output file
deseq_output_filepath <- "../graphs/elev_v_low_day02/DEGlist_wcols.txt"
# Read output file into R
transcript_data <- read.table(deseq_output_filepath,
header = TRUE, sep = "\t")
# Transcript IDs are rownames - move them into first column
transcript_data <- tibble::rownames_to_column(transcript_data,
"Transcript_ID")
# Read BLAST data into R
blast_data <- read.table(blast_filepath, header = FALSE,
sep = "\t")
# Columns have no names - add names for first two columns
colnames(blast_data)[1:2] <- c("Transcript_ID", "Gene_ID")
# Turn the first two columns of BLAST data into a Transcript ID/Gene ID key
blastkey <- blast_data %>%
select(Transcript_ID, Gene_ID)
# Add Gene ID column to transcript data, using Transcript ID column to match
transcript_data <- left_join(transcript_data, blastkey, by = "Transcript_ID")
# Select only the Transcript ID and Gene ID columns
transcript_key <- transcript_data[,c("Transcript_ID", "Gene_ID")]
length(transcript_key$Transcript_ID)
sum(is.na(transcript_key$Gene_ID))
# Ambient vs. Low Temperature
transcripts_to_geneIDs(deseq_filepath = "../graphs/amb_v_low_day02/DEGlist_wcols.txt",
blast_filepath = "../data/cbai_hemat_diamond_blastx_table_transcriptome_v3.0.txt",
output_path = "../output/signif_accession_ids/Amb_vsLow_DEG_IDs.txt")
# Functions are defined in hematodinium_analysis_functions.R
source("hematodinium_analysis_functions.R")
# Ambient vs. Low Temperature
transcripts_to_geneIDs(deseq_filepath = "../graphs/amb_v_low_day02/DEGlist_wcols.txt",
blast_filepath = "../data/cbai_hemat_diamond_blastx_table_transcriptome_v3.0.txt",
output_path = "../output/signif_accession_ids/Amb_vsLow_DEG_IDs.txt")
# Functions are defined in hematodinium_analysis_functions.R
source("hematodinium_analysis_functions.R")
# Ambient vs. Low Temperature
transcripts_to_geneIDs(deseq_filepath = "../graphs/amb_v_low_day02/DEGlist_wcols.txt",
blast_filepath = "../data/cbai_hemat_diamond_blastx_table_transcriptome_v3.0.txt",
output_path = "../output/signif_accession_ids/Amb_vsLow_DEG_IDs.txt")
# Day 0 vs. Day 17, Ambient Temperature
transcripts_to_geneIDs(deseq_filepath = "../graphs/day0_day17_ambient/DEGlist_wcols.txt",
blast_filepath = "../data/cbai_hemat_diamond_blastx_table_transcriptome_v3.0.txt",
output_path = "../output/signif_accession_ids/day0_day17_amb_DEG_IDs.txt")
# Elevated vs. Ambient Temperature
transcripts_to_geneIDs(deseq_filepath = "../graphs/elev_v_amb_day02/DEGlist_wcols.txt",
blast_filepath = "../data/cbai_hemat_diamond_blastx_table_transcriptome_v3.0.txt",
output_path = "../output/signif_accession_ids/Elev_vsAmb_DEG_IDs.txt")
# Elevated vs. Low Temperature
transcripts_to_geneIDs(deseq_filepath = "../graphs/elev_v_low_day02/DEGlist_wcols.txt",
blast_filepath = "../data/cbai_hemat_diamond_blastx_table_transcriptome_v3.0.txt",
output_path = "../output/signif_accession_ids/Elev_vsLow_DEG_IDs.txt")
# Get all gene IDs for all genes, not just DEGs
# Ambient vs. Low Temperature
transcripts_to_geneIDs(deseq_filepath = "../graphs/amb_v_low_day02/AllGenes_wcols.txt",
blast_filepath = "../data/cbai_hemat_diamond_blastx_table_transcriptome_v3.0.txt",
output_path = "../output/signif_accession_ids/Amb_vsLow_All_GeneIDs.txt")
# Day 0 vs. Day 17, Ambient Temperature
transcripts_to_geneIDs(deseq_filepath = "../graphs/day0_day17_ambient/AllGenes_wcols.txt",
blast_filepath = "../data/cbai_hemat_diamond_blastx_table_transcriptome_v3.0.txt",
output_path = "../output/signif_accession_ids/day0_day17_All_GeneIDs.txt")
# Elevated vs. Ambient Temperature
transcripts_to_geneIDs(deseq_filepath = "../graphs/elev_v_amb_day02/AllGenes_wcols.txt",
blast_filepath = "../data/cbai_hemat_diamond_blastx_table_transcriptome_v3.0.txt",
output_path = "../output/signif_accession_ids/Elev_vsAmb_All_GeneIDs.txt")
# Elevated vs. Low Temperature
transcripts_to_geneIDs(deseq_filepath = "../graphs/elev_v_low_day02/AllGenes_wcols.txt",
blast_filepath = "../data/cbai_hemat_diamond_blastx_table_transcriptome_v3.0.txt",
output_path = "../output/signif_accession_ids/Elev_vsLow_All_GeneIDs.txt")
variable <- "day"
paste("~", variable)
?paste
paste0("~", variable)
##########################################################
deseq_filepath <- ../graphs/amb_v_low_day02/AllGenes_wcols
##########################################################
deseq_filepath <- "../graphs/amb_v_low_day02/AllGenes_wcols"
# Import gene list
transcript_data <- read.table(deseq_filepath,
header = TRUE, sep = "\t")
##########################################################
deseq_filepath <- "../graphs/amb_v_low_day02/AllGenes_wcols"
# Import gene list
transcript_data <- read.table(deseq_filepath,
header = TRUE, sep = "\t")
pwd
pwd()
ls
ls()
getwd()
##########################################################
deseq_filepath <- "../graphs/amb_v_low_day02/AllGenes_wcols.txt"
# Import gene list
transcript_data <- read.table(deseq_filepath,
header = TRUE, sep = "\t")
# Transcript IDs are rownames - move them into first column
transcript_data <- tibble::rownames_to_column(transcript_data,
"Transcript_ID")
blast_filepath <- "../data/cbai_hemat_diamond_blastx_table_transcriptome_v3.0.txt"
# Import gene list
transcript_data <- read.table(deseq_filepath,
header = TRUE, sep = "\t")
# Read BLAST data into R
blast_data <- read.table(blast_filepath, header = FALSE,
sep = "\t")
View(blast_data)
View(transcript_data)
# Columns have no names - add names for first two columns
colnames(blast_data)[1:2] <- c("Transcript_ID", "Gene_ID")
# Turn the first two columns of BLAST data into a Transcript ID/Gene ID key
blastkey <- blast_data %>%
select(Transcript_ID, Gene_ID)
##########################################################
library(tidyverse)
# Turn the first two columns of BLAST data into a Transcript ID/Gene ID key
blastkey <- blast_data %>%
select(Transcript_ID, Gene_ID)
# Add Gene ID column to transcript data, using Transcript ID column to match
transcript_data <- left_join(transcript_data, blastkey, by = "Transcript_ID")
# Import gene list
transcript_data <- read.table(deseq_filepath,
header = TRUE, sep = "\t")
# Transcript IDs are rownames - move them into first column
transcript_data <- tibble::rownames_to_column(transcript_data,
"Transcript_ID")
# Read BLAST data into R
blast_data <- read.table(blast_filepath, header = FALSE,
sep = "\t")
# Columns have no names - add names for first two columns
colnames(blast_data)[1:2] <- c("Transcript_ID", "Gene_ID")
# Turn the first two columns of BLAST data into a Transcript ID/Gene ID key
blastkey <- blast_data %>%
select(Transcript_ID, Gene_ID)
# Add Gene ID column to transcript data, using Transcript ID column to match
transcript_data <- left_join(transcript_data, blastkey, by = "Transcript_ID")
View(transcript_data)
# Select only the Transcript ID and Gene ID columns
transcript_key <- transcript_data[,c("Transcript_ID", "pvalue", "Gene_ID")]
length(transcript_key$Transcript_ID)
sum(is.na(transcript_key$Gene_ID))
# Separate Gene ID to specifically get Uniprot accession ID
transcript_key <- separate(data = transcript_key, col = Gene_ID, into = c("sp", "Accession_ID", "species"),
sep = "\\|")
View(transcript_key)
transcript_key[duplicated(transcript_key$Accession_ID)]
transcript_key[duplicated(transcript_key$Accession_ID),]
transcript_key[duplicated(transcript_key$Accession_ID),c(1,2,4)]
transcript_key[duplicated(!is.na(transcript_key$Accession_ID)),c(1,2,4)]
# Create vector of non-NA accession IDs
accession_IDs <- transcript_key[na.omit(transcript_key$Accession_ID), c(1,2,4)]
# Create vector of non-NA accession IDs
accession_IDs <- transcript_key[na.omit(transcript_key$Accession_ID), c(1,2,4)]
View(accession_IDs)
View(accession_IDs)
# Create vector of non-NA accession IDs
accession_IDs <- transcript_key[!is.na(transcript_key$Accession_ID), c(1,2,4)]
View(accession_IDs)
length(accession_IDs$Accession_ID)
length(unique(accession_IDs$Accession_ID))
duplicated(accession_IDs$Accession_ID)
duplicates <- accession_IDs[duplicated(accession_IDs$Accession_ID), ]
View(duplicates)
View(accession_IDs)
view(duplicates)
rm(duplicates)
# Remove all columns except transcript ID, gene ID, and p-value
transcript_key <- transcript_key[!is.na(transcript_key$Accession_ID), c(1,2,4)]
head(transcript_key)
# Remove all columns except transcript ID, gene ID, and p-value
transcript_key <- transcript_key[!is.na(transcript_key$Accession_ID), c(4, 2)]
# Select only the Transcript ID and Gene ID columns
transcript_key <- transcript_data[,c("Transcript_ID", "pvalue", "Gene_ID")]
length(transcript_key$Transcript_ID)
sum(is.na(transcript_key$Gene_ID))
# Separate Gene ID to specifically get Uniprot accession ID
transcript_key <- separate(data = transcript_key, col = Gene_ID, into = c("sp", "Accession_ID", "species"),
sep = "\\|")
# Remove all columns except transcript ID, gene ID, and p-value
transcript_key <- transcript_key[!is.na(transcript_key$Accession_ID), c(4, 2)]
View(transcript_key)
View(transcript_key)
write.csv(transcript_key, 'testing.csv')
View(transcript_key)
rownames(transcript_key) <- NULL
write.csv(transcript_key, 'testing.csv')
write.csv(transcript_key, 'testing.csv', row.names = FALSE)
write.csv(transcript_key, 'testing.csv', row.names = FALSE,
quote = FALSE)
##########################################################
library(tidyverse)
# Functions are defined in hematodinium_analysis_functions.R
source("hematodinium_analysis_functions.R")
# Compare ambient and low-temp treatments
geneIDs_pvals(input_file = "../graphs/amb_v_low_day02/AllGenes_wcols",
blast_file = "../data/cbai_hemat_diamond_blastx_table_transcriptome_v3.0",
output_file = "../output/input_for_GO-MWU/Amb_vsLow_day02.csv")
# Compare ambient and low-temp treatments
geneIDs_pvals(input_file = "../graphs/amb_v_low_day02/AllGenes_wcols",
blast_file = "../data/cbai_hemat_diamond_blastx_table_transcriptome_v3.0",
output_file = "../output/input_for_GO-MWU/Amb_vsLow_day02.csv")
# Functions are defined in hematodinium_analysis_functions.R
source("hematodinium_analysis_functions.R")
# Compare ambient and low-temp treatments
geneIDs_pvals(input_file = "../graphs/amb_v_low_day02/AllGenes_wcols",
blast_file = "../data/cbai_hemat_diamond_blastx_table_transcriptome_v3.0",
output_file = "../output/input_for_GO-MWU/Amb_vsLow_day02.csv")
View(geneIDs_pvals)
setwd("C:/Users/acoyl/Documents/GitHub/hemat_bairdii_transcriptome/scripts")
# Functions are defined in hematodinium_analysis_functions.R
source("hematodinium_analysis_functions.R")
# Compare ambient and low-temp treatments
geneIDs_pvals(input_file = "../graphs/amb_v_low_day02/AllGenes_wcols",
blast_file = "../data/cbai_hemat_diamond_blastx_table_transcriptome_v3.0",
output_file = "../output/input_for_GO-MWU/Amb_vsLow_day02.csv")
# Compare ambient and low-temp treatments
geneIDs_pvals(input_file = "../graphs/amb_v_low_day02/AllGenes_wcols",
blast_file = "../data/cbai_hemat_diamond_blastx_table_transcriptome_v3.0",
output_file = "../output/input_for_GO-MWU/Amb_vsLow_day02.csv")
# Functions are defined in hematodinium_analysis_functions.R
source("hematodinium_analysis_functions.R")
# Functions are defined in hematodinium_analysis_functions.R
source("hematodinium_analysis_functions.R")
# Compare ambient and low-temp treatments
geneIDs_pvals(input_file = "../graphs/amb_v_low_day02/AllGenes_wcols",
blast_file = "../data/cbai_hemat_diamond_blastx_table_transcriptome_v3.0",
output_file = "../output/input_for_GO-MWU/Amb_vsLow_day02.csv")
# Functions are defined in hematodinium_analysis_functions.R
source("hematodinium_analysis_functions.R")
# Compare ambient and low-temp treatments
geneIDs_pvals(input_file = "../graphs/amb_v_low_day02/AllGenes_wcols",
blast_file = "../data/cbai_hemat_diamond_blastx_table_transcriptome_v3.0",
output_file = "../output/input_for_GO-MWU/Amb_vsLow_day02.csv")
# Compare ambient and low-temp treatments
geneIDs_pvals(input_file = "../graphs/amb_v_low_day02/AllGenes_wcols",
blast_file = "../data/cbai_hemat_diamond_blastx_table_transcriptome_v3.0",
output_file = "../output/input_for_GO-MWU/Amb_vsLow_day02.csv")
setwd("C:/Users/acoyl/Documents/GitHub/hemat_bairdii_transcriptome/scripts")
# Compare ambient and low-temp treatments
geneIDs_pvals(input_file = "../graphs/amb_v_low_day02/AllGenes_wcols",
blast_file = "../data/cbai_hemat_diamond_blastx_table_transcriptome_v3.0",
output_file = "../output/input_for_GO-MWU/Amb_vsLow_day02.csv")
# Functions are defined in hematodinium_analysis_functions.R
source("hematodinium_analysis_functions.R")
# Functions are defined in hematodinium_analysis_functions.R
source("hematodinium_analysis_functions.R")
# Compare ambient and low-temp treatments
geneIDs_pvals(input_file = "../graphs/amb_v_low_day02/AllGenes_wcols.txt",
blast_file = "../data/cbai_hemat_diamond_blastx_table_transcriptome_v3.0.txt",
output_file = "../output/input_for_GO-MWU/Amb_vsLow_day02.csv")
# Compare day 0 and day 17 treatments
geneIDs_pvals(input_file = "../graphs/day0_day17_ambient/AllGenes_wcols.txt",
blast_file = "../data/cbai_hemat_diamond_blastx_table_transcriptome_v3.0.txt",
output_file = "../output/input_for_GO-MWU/day0_day17_amb.csv")
# Elevated and ambient treatments
geneIDs_pvals(input_file = "../graphs/elev_v_amb_day02/AllGenes_wcols.txt",
blast_file = "../data/cbai_hemat_diamond_blastx_table_transcriptome_v3.0.txt",
output_file = "../output/input_for_GO-MWU/Elev_vsAmb_day02.csv")
# Elevated and low-temp treatments
geneIDs_pvals(input_file = "../graphs/elev_v_low_day02/AllGenes_wcols.txt",
blast_file = "../data/cbai_hemat_diamond_blastx_table_transcriptome_v3.0.txt",
output_file = "../output/input_for_GO-MWU/Elev_vsLow_day02.csv")
# Ambient and low-temp treatments
geneIDs_pvals(input_file = "../graphs/amb_v_low_day02/AllGenes_wcols.txt",
blast_file = "../data/cbai_hemat_diamond_blastx_table_transcriptome_v3.0.txt",
output_file = "../output/input_for_GO-MWU/Amb_vsLow_day02.csv")
# Day 0 and day 17 treatments
geneIDs_pvals(input_file = "../graphs/day0_day17_ambient/AllGenes_wcols.txt",
blast_file = "../data/cbai_hemat_diamond_blastx_table_transcriptome_v3.0.txt",
output_file = "../output/input_for_GO-MWU/day0_day17_amb.csv")
# Elevated and ambient treatments
geneIDs_pvals(input_file = "../graphs/elev_v_amb_day02/AllGenes_wcols.txt",
blast_file = "../data/cbai_hemat_diamond_blastx_table_transcriptome_v3.0.txt",
output_file = "../output/input_for_GO-MWU/Elev_vsAmb_day02.csv")
# Elevated and low-temp treatments
geneIDs_pvals(input_file = "../graphs/elev_v_low_day02/AllGenes_wcols.txt",
blast_file = "../data/cbai_hemat_diamond_blastx_table_transcriptome_v3.0.txt",
output_file = "../output/input_for_GO-MWU/Elev_vsLow_day02.csv")
# Functions are defined in hematodinium_analysis_functions.R
source("hematodinium_analysis_functions.R")
# Ambient and low-temp treatments
geneIDs_pvals(input_file = "../graphs/amb_v_low_day02/AllGenes_wcols.txt",
blast_file = "../data/cbai_hemat_diamond_blastx_table_transcriptome_v3.0.txt",
output_file = "../output/input_for_GO-MWU/Amb_vsLow_day02.csv")
# Day 0 and day 17 treatments
geneIDs_pvals(input_file = "../graphs/day0_day17_ambient/AllGenes_wcols.txt",
blast_file = "../data/cbai_hemat_diamond_blastx_table_transcriptome_v3.0.txt",
output_file = "../output/input_for_GO-MWU/day0_day17_amb.csv")
# Elevated and ambient treatments
geneIDs_pvals(input_file = "../graphs/elev_v_amb_day02/AllGenes_wcols.txt",
blast_file = "../data/cbai_hemat_diamond_blastx_table_transcriptome_v3.0.txt",
output_file = "../output/input_for_GO-MWU/Elev_vsAmb_day02.csv")
# Elevated and low-temp treatments
geneIDs_pvals(input_file = "../graphs/elev_v_low_day02/AllGenes_wcols.txt",
blast_file = "../data/cbai_hemat_diamond_blastx_table_transcriptome_v3.0.txt",
output_file = "../output/input_for_GO-MWU/Elev_vsLow_day02.csv")
# Install packages
install.packages("dichromat")
# Install packages
?require()
# Install packages
require(dichromat)
# Import 2-col table of accession IDs and p-values
geneBackground <- read.csv("../input_for_GO-MWU/Amb_bsLow_day02.csv")
getwd()
# Import 2-col table of accession IDs and p-values
geneBackground <- read.csv("..output/input_for_GO-MWU/Amb_bsLow_day02.csv")
# Import 2-col table of accession IDs and p-values
geneBackground <- read.csv("..output/input_for_GO-MWU/Amb_vsLow_day02.csv")
# Import 2-col table of accession IDs and p-values
geneBackground <- read.csv("..output/input_for_GO-MWU/Amb_vsLow_day02.csv")
# Import 2-col table of accession IDs and p-values
geneBackground <- read.csv("../output/input_for_GO-MWU/Amb_vsLow_day02.csv")
View(geneBackground)
View(geneBackground)
head(geneBackground)
# Import 2-col table of gene IDs and GO terms
uniprotGOTerms <- read.delim("../output/input_for_GO-MWU/Amb_vsLow_All_GOIDs.txt")
View(uniprotGOTerms)
# Import 2-col table of gene IDs and GO terms
uniprotGOTerms <- read.delim("../output/input_for_GO-MWU/Amb_vsLow_All_GOIDs.txt",
header = FALSE)
View(uniprotGOTerms)
View(geneBackground)
# Rename columns
colnames(uniprotGOterms) <- c("Uniprot", "GO")
# Rename columns
colnames(uniprotGOTerms) <- c("Uniprot", "GO")
View(uniprotGOTerms)
#Confirm import
head(uniprotGOTerms)
View(uniprotGOTerms)
knitr::opts_chunk$set(echo = TRUE)
geneBackground <- read.csv("../output/input_for_GO-MWU/Amb_vsLow_day02.csv")
# Confirm import
head(geneBackground)
uniprotGOTerms <- read.delim("../output/input_for_GO-MWU/Amb_vsLow_All_GOIDs.txt",
header = FALSE)
# Rename columns
colnames(uniprotGOTerms) <- c("Uniprot", "GO")
#Confirm import
head(uniprotGOTerms)
View(geneBackground)
View(uniprotGOTerms)
View(geneBackground)
# Rename columns
colnames(geneBackground) <- c("Uniprot", "pvalue")
# Confirm import
head(geneBackground)
geneBackgroundGOterms <- merge(x = geneBackground,
y = uniprotGOTerms,
by = "Uniprot")
View(geneBackgroundGOterms)
rm(geneBackgroundGOterms)
geneBackgroundGOterms <- merge(x = geneBackground,
y = uniprotGOTerms,
by = "Uniprot")
head(geneBackgroundGOterms)
