main = "gene counts by day",
fontsize = 9)
# Extract gene clusters
out <- pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
hc <- out$tree_row
lbl <- cutree(hc, clusters) # split dendrogram into the number of groups specified above
# Loop through gene clusters, printing heatmap for each
for (i in 1:clusters) {
clust <- f.crabdat[which(lbl==i) %>% names(), ]
# Write results to table
write.table(clust, file = paste0(crab_out,
"cluster_",
i, ".txt"),
sep = "\t",
row.names = TRUE)
# Create heat map for each cluster
png(paste0(crab_out, "cluster_", i, "_heatmap.png"))
print(pheatmap(clust, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = paste0("gene counts by day, cluster ", i),
fontsize = 9))
dev.off()
}
# Look at cluster heatmaps, designate each day within clusters as low, medium, or high. Order corresponds to order of clusters (ex: if Cluster 2 is high/low/medium, the second object in the vector should be "HLM")
clustorder <- c("HLL", "MHL", "MLH", "HLH", "LHM")
# See if any duplicates are present in our clusters
any(duplicated(clustorder))
# Rename all heatmaps to include the cluster order
file.rename(paste0(crab_out, list.files(crab_out, pattern = "^cluster_.*heatmap\\.png$")),
paste0(crab_out, "cluster_", clustorder, "_heatmap.png"))
# Rename all cluster filenames to include cluster order
file.rename(paste0(crab_out, list.files(crab_out, pattern = "^cluster_.*\\.txt")),
paste0(crab_out, "cluster_",
clustorder, ".txt"))
crabs[4]
# Set path to output folder that will contain all heatmaps and text files for Crab D
crab_out <- paste0(heatmap_output, "Crab_D/")
# Read in data
crabdat <- read.delim(file = paste0(TPM_outpath,
"Crab_",
crabs[4],
"_TPMcts.txt"),
row.names = 1)
# Drop any genes with less than 5 counts across all 3 samples
keep <- rowSums(crabdat) >= 5
f.crabdat <- crabdat[keep, ]
print(paste("# of genes remaining after pre-filtering:", nrow(f.crabdat)))
print(paste("# of genes dropped:", nrow(crabdat) - nrow(f.crabdat), sep = " "))
# Construct heat map
pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
png(paste0(crab_out, "heatmap.png"))
pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
dev.off()
# SPECIFY NUMBER OF CLUSTERS
clusters <- 3
# Extract gene clusters
out <- pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
hc <- out$tree_row
lbl <- cutree(hc, clusters) # split dendrogram into the number of groups specified above
# Loop through gene clusters, printing heatmap for each
for (i in 1:clusters) {
clust <- f.crabdat[which(lbl==i) %>% names(), ]
# Write results to table
write.table(clust, file = paste0(crab_out,
"cluster_",
i, ".txt"),
sep = "\t",
row.names = TRUE)
# Create heat map for each cluster
png(paste0(crab_out, "cluster_", i, "_heatmap.png"))
print(pheatmap(clust, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = paste0("gene counts by day, cluster ", i),
fontsize = 9))
dev.off()
}
# Look at cluster heatmaps, designate each day within clusters as low, medium, or high. Order corresponds to order of clusters (ex: if Cluster 2 is high/low/medium, the second object in the vector should be "HLM")
clustorder <- c("LLH", "LHL", "HLM")
# See if any duplicates are present in our clusters
any(duplicated(clustorder))
# Rename all heatmaps to include the cluster order
file.rename(paste0(crab_out, list.files(crab_out, pattern = "^cluster_.*heatmap\\.png$")),
paste0(crab_out, "cluster_", clustorder, "_heatmap.png"))
# Rename all cluster filenames to include cluster order
file.rename(paste0(crab_out, list.files(crab_out, pattern = "^cluster_.*\\.txt")),
paste0(crab_out, "cluster_",
clustorder, ".txt"))
# Set path to output folder that will contain all heatmaps and text files for Crab C
crab_out <- paste0(heatmap_output, "Crab_E/")
crabs[5]
# Read in data
crabdat <- read.delim(file = paste0(TPM_outpath,
"Crab_",
crabs[5],
"_TPMcts.txt"),
row.names = 1)
# Drop any genes with less than 5 counts across all 3 samples
keep <- rowSums(crabdat) >= 5
f.crabdat <- crabdat[keep, ]
print(paste("# of genes remaining after pre-filtering:", nrow(f.crabdat)))
print(paste("# of genes dropped:", nrow(crabdat) - nrow(f.crabdat), sep = " "))
# Construct heat map
pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
png(paste0(crab_out, "heatmap.png"))
pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
dev.off()
# SPECIFY NUMBER OF CLUSTERS
clusters <- 5
# Extract gene clusters
out <- pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
hc <- out$tree_row
lbl <- cutree(hc, clusters) # split dendrogram into the number of groups specified above
# Loop through gene clusters, printing heatmap for each
for (i in 1:clusters) {
clust <- f.crabdat[which(lbl==i) %>% names(), ]
# Write results to table
write.table(clust, file = paste0(crab_out,
"cluster_",
i, ".txt"),
sep = "\t",
row.names = TRUE)
# Create heat map for each cluster
png(paste0(crab_out, "cluster_", i, "_heatmap.png"))
print(pheatmap(clust, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = paste0("gene counts by day, cluster ", i),
fontsize = 9))
dev.off()
}
# Look at cluster heatmaps, designate each day within clusters as low, medium, or high. Order corresponds to order of clusters (ex: if Cluster 2 is high/low/medium, the second object in the vector should be "HLM")
clustorder <- c("MHL", "MLH", "HML", "LMH", "HLM")
# See if any duplicates are present in our clusters
any(duplicated(clustorder))
# Rename all heatmaps to include the cluster order
file.rename(paste0(crab_out, list.files(crab_out, pattern = "^cluster_.*heatmap\\.png$")),
paste0(crab_out, "cluster_", clustorder, "_heatmap.png"))
# Rename all cluster filenames to include cluster order
file.rename(paste0(crab_out, list.files(crab_out, pattern = "^cluster_.*\\.txt")),
paste0(crab_out, "cluster_",
clustorder, ".txt"))
crabs[6]
# Set path to output folder that will contain all heatmaps and text files for Crab F
crab_out <- paste0(heatmap_output, "Crab_F/")
# Read in data
crabdat <- read.delim(file = paste0(TPM_outpath,
"Crab_",
crabs[6],
"_TPMcts.txt"),
row.names = 1)
# Drop any genes with less than 5 counts across all 3 samples
keep <- rowSums(crabdat) >= 5
f.crabdat <- crabdat[keep, ]
print(paste("# of genes remaining after pre-filtering:", nrow(f.crabdat)))
print(paste("# of genes dropped:", nrow(crabdat) - nrow(f.crabdat), sep = " "))
# Construct heat map
pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
# Plot again to save in our file
png(paste0(crab_out, "heatmap.png"))
pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
dev.off()
# SPECIFY NUMBER OF CLUSTERS
clusters <- 5
# Extract gene clusters
out <- pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
hc <- out$tree_row
lbl <- cutree(hc, clusters) # split dendrogram into the number of groups specified above
# Loop through gene clusters, printing heatmap for each
for (i in 1:clusters) {
clust <- f.crabdat[which(lbl==i) %>% names(), ]
# Write results to table
write.table(clust, file = paste0(crab_out,
"cluster_",
i, ".txt"),
sep = "\t",
row.names = TRUE)
# Create heat map for each cluster
png(paste0(crab_out, "cluster_", i, "_heatmap.png"))
print(pheatmap(clust, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = paste0("gene counts by day, cluster ", i),
fontsize = 9))
dev.off()
}
# Look at cluster heatmaps, designate each day within clusters as low, medium, or high. Order corresponds to order of clusters (ex: if Cluster 2 is high/low/medium, the second object in the vector should be "HLM")
clustorder <- c("LH", "HL")
# See if any duplicates are present in our clusters
any(duplicated(clustorder))
# Rename all heatmaps to include the cluster order
file.rename(paste0(crab_out, list.files(crab_out, pattern = "^cluster_.*heatmap\\.png$")),
paste0(crab_out, "cluster_", clustorder, "_heatmap.png"))
crab_out
list.files(crab_out, pattern = "^cluster_.*heatmap\\.png$")
(paste0(crab_out, list.files(crab_out, pattern = "^cluster_.*heatmap\\.png$"))
paste0(crab_out, list.files(crab_out, pattern = "^cluster_.*heatmap\\.png$"))
# Look at cluster heatmaps, designate each day within clusters as low, medium, or high. Order corresponds to order of clusters (ex: if Cluster 2 is high/low/medium, the second object in the vector should be "HLM")
clustorder <- c("LHH", "HML", "MHM", "HLL", "LMH")
# See if any duplicates are present in our clusters
any(duplicated(clustorder))
# Rename all heatmaps to include the cluster order
file.rename(paste0(crab_out, list.files(crab_out, pattern = "^cluster_.*heatmap\\.png$")),
paste0(crab_out, "cluster_", clustorder, "_heatmap.png"))
# Rename all cluster filenames to include cluster order
file.rename(paste0(crab_out, list.files(crab_out, pattern = "^cluster_.*\\.txt")),
paste0(crab_out, "cluster_",
clustorder, ".txt"))
crabs[7]
# Set path to output folder that will contain all heatmaps and text files for Crab C
crab_out <- paste0(heatmap_output, "Crab_G/")
# Read in data
crabdat <- read.delim(file = paste0(TPM_outpath,
"Crab_",
crabs[7],
"_TPMcts.txt"),
row.names = 1)
# Drop any genes with less than 5 counts across all 3 samples
keep <- rowSums(crabdat) >= 5
f.crabdat <- crabdat[keep, ]
print(paste("# of genes remaining after pre-filtering:", nrow(f.crabdat)))
print(paste("# of genes dropped:", nrow(crabdat) - nrow(f.crabdat), sep = " "))
# Construct heat map
pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
png(paste0(crab_out, "heatmap.png"))
pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
dev.off()
# SPECIFY NUMBER OF CLUSTERS
clusters <- 2
# Extract gene clusters
out <- pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
# Extract gene clusters
out <- pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
hc <- out$tree_row
lbl <- cutree(hc, clusters) # split dendrogram into the number of groups specified above
# Loop through gene clusters, printing heatmap for each
for (i in 1:clusters) {
clust <- f.crabdat[which(lbl==i) %>% names(), ]
# Write results to table
write.table(clust, file = paste0(crab_out,
"cluster_",
i, ".txt"),
sep = "\t",
row.names = TRUE)
# Create heat map for each cluster
png(paste0(crab_out, "cluster_", i, "_heatmap.png"))
print(pheatmap(clust, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = paste0("gene counts by day, cluster ", i),
fontsize = 9))
dev.off()
}
# Look at cluster heatmaps, designate each day within clusters as low, medium, or high. Order corresponds to order of clusters (ex: if Cluster 2 is high/low/medium, the second object in the vector should be "HLM")
clustorder <- c("LH", "HL")
# See if any duplicates are present in our clusters
any(duplicated(clustorder))
# Rename all heatmaps to include the cluster order
file.rename(paste0(crab_out, list.files(crab_out, pattern = "^cluster_.*heatmap\\.png$")),
paste0(crab_out, "cluster_", clustorder, "_heatmap.png"))
# Rename all cluster filenames to include cluster order
file.rename(paste0(crab_out, list.files(crab_out, pattern = "^cluster_.*\\.txt")),
paste0(crab_out, "cluster_",
clustorder, ".txt"))
crabs[8]
# Set path to output folder that will contain all heatmaps and text files for Crab C
crab_out <- paste0(heatmap_output, "Crab_H/")
# Read in data
crabdat <- read.delim(file = paste0(TPM_outpath,
"Crab_",
crabs[8],
"_TPMcts.txt"),
row.names = 1)
# Drop any genes with less than 5 counts across all 3 samples
keep <- rowSums(crabdat) >= 5
f.crabdat <- crabdat[keep, ]
print(paste("# of genes remaining after pre-filtering:", nrow(f.crabdat)))
print(paste("# of genes dropped:", nrow(crabdat) - nrow(f.crabdat), sep = " "))
# Construct heat map
pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
png(paste0(crab_out, "heatmap.png"))
pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
dev.off()
# SPECIFY NUMBER OF CLUSTERS
clusters <- 2
# Extract gene clusters
out <- pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
hc <- out$tree_row
lbl <- cutree(hc, clusters) # split dendrogram into the number of groups specified above
# Loop through gene clusters, printing heatmap for each
for (i in 1:clusters) {
clust <- f.crabdat[which(lbl==i) %>% names(), ]
# Write results to table
write.table(clust, file = paste0(crab_out,
"cluster_",
i, ".txt"),
sep = "\t",
row.names = TRUE)
# Create heat map for each cluster
png(paste0(crab_out, "cluster_", i, "_heatmap.png"))
print(pheatmap(clust, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = paste0("gene counts by day, cluster ", i),
fontsize = 9))
dev.off()
}
# Look at cluster heatmaps, designate each day within clusters as low, medium, or high. Order corresponds to order of clusters (ex: if Cluster 2 is high/low/medium, the second object in the vector should be "HLM")
clustorder <- c("HL", "LH")
# See if any duplicates are present in our clusters
any(duplicated(clustorder))
# Rename all heatmaps to include the cluster order
file.rename(paste0(crab_out, list.files(crab_out, pattern = "^cluster_.*heatmap\\.png$")),
paste0(crab_out, "cluster_", clustorder, "_heatmap.png"))
# Rename all cluster filenames to include cluster order
file.rename(paste0(crab_out, list.files(crab_out, pattern = "^cluster_.*\\.txt")),
paste0(crab_out, "cluster_",
clustorder, ".txt"))
# Rename all cluster filenames to include cluster order
file.rename(paste0(crab_out, list.files(crab_out, pattern = "^cluster_.*\\.txt")),
paste0(crab_out, "cluster_",
clustorder, ".txt"))
crabs[9]
# Set path to output folder that will contain all heatmaps and text files for Crab C
crab_out <- paste0(heatmap_output, "Crab_I/")
# Read in data
crabdat <- read.delim(file = paste0(TPM_outpath,
"Crab_",
crabs[9],
"_TPMcts.txt"),
row.names = 1)
# Drop any genes with less than 5 counts across all 3 samples
keep <- rowSums(crabdat) >= 5
f.crabdat <- crabdat[keep, ]
print(paste("# of genes remaining after pre-filtering:", nrow(f.crabdat)))
print(paste("# of genes dropped:", nrow(crabdat) - nrow(f.crabdat), sep = " "))
# Construct heat map
pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
# Plot again to save in our file
png(paste0(crab_out, "heatmap.png"))
pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
dev.off()
# SPECIFY NUMBER OF CLUSTERS
clusters <- 2
# Extract gene clusters
out <- pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
hc <- out$tree_row
lbl <- cutree(hc, clusters) # split dendrogram into the number of groups specified above
# Loop through gene clusters, printing heatmap for each
for (i in 1:clusters) {
clust <- f.crabdat[which(lbl==i) %>% names(), ]
# Write results to table
write.table(clust, file = paste0(crab_out,
"cluster_",
i, ".txt"),
sep = "\t",
row.names = TRUE)
# Create heat map for each cluster
png(paste0(crab_out, "cluster_", i, "_heatmap.png"))
print(pheatmap(clust, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = paste0("gene counts by day, cluster ", i),
fontsize = 9))
dev.off()
}
# Look at cluster heatmaps, designate each day within clusters as low, medium, or high. Order corresponds to order of clusters (ex: if Cluster 2 is high/low/medium, the second object in the vector should be "HLM")
clustorder <- c("LH", "HL")
# See if any duplicates are present in our clusters
any(duplicated(clustorder))
# Rename all heatmaps to include the cluster order
file.rename(paste0(crab_out, list.files(crab_out, pattern = "^cluster_.*heatmap\\.png$")),
paste0(crab_out, "cluster_", clustorder, "_heatmap.png"))
# Rename all cluster filenames to include cluster order
file.rename(paste0(crab_out, list.files(crab_out, pattern = "^cluster_.*\\.txt")),
paste0(crab_out, "cluster_",
clustorder, ".txt"))
