library(DESeq2)
library(tidyverse)
library(VennDiagram)
install.packages("VennDiagram")
library(vsn)
install.packages("vsn")
BiocManager::install("vsn")
library(vsn)
library(ape)
install.packages("ape")
library(ape)
sessionInfo()
library(VennDiagram)
sessionInfo()
library(apeglm)
library(DESeq2)
library(tidyverse)
library(VennDiagram)
library(vsn)
sessionInfo()
knitr::opts_chunk$set(echo = TRUE)
exp_design <- data.frame(temp = factor(c("Low", "Amb", "Elev")),
day = factor(c(0, 2, 17)))
exp_design
exp_design <- data.frame(temp = factor(c("Amb", "Amb", "Amb",
"Elev", "Elev", "Elev")),
day = factor(c(0, 0, 0, 2, 2, 2)))
deseq_analysis(kallisto_path = "../output/kallisto_matrices/hemat_transcriptomev1.6/elev0_vs_elev2_indiv/kallisto.isoform.counts.matrix",
experiment_table = exp_design,
output_path = "../graphs/DESeq2_output/hemat_transcriptomev1.6/elev0_vs_elev2_indiv",
variable = "temp")
library(apeglm)
library(apeglm)
library(DESeq2)
library(apeglm)
library(DESeq2)
library(tidyverse)
library(VennDiagram)
library(vsn)
# Functions are defined in hematodinium_analysis_functions.R
source("hematodinium_analysis_functions.R")
exp_design <- data.frame(temp = factor(c("Amb", "Amb", "Amb",
"Elev", "Elev", "Elev")),
day = factor(c(0, 0, 0, 2, 2, 2)))
deseq_analysis(kallisto_path = "../output/kallisto_matrices/hemat_transcriptomev1.6/elev0_vs_elev2_indiv/kallisto.isoform.counts.matrix",
experiment_table = exp_design,
output_path = "../graphs/DESeq2_output/hemat_transcriptomev1.6/elev0_vs_elev2_indiv",
variable = "temp")
exp_design <- data.frame(temp = factor(c("Amb", "Amb", "Amb",
"Elev", "Elev", "Elev")),
day = factor(c(0, 0, 0, 2, 2, 2)))
deseq_analysis(kallisto_path = "../output/kallisto_matrices/hemat_transcriptomev1.6/elev0_vs_elev2_indiv/kallisto.isoform.counts.matrix",
experiment_table = exp_design,
output_path = "../graphs/DESeq2_output/hemat_transcriptomev1.6/elev0_vs_elev2_indiv",
variable = "temp")
pwd()
getwd()
knitr::opts_chunk$set(echo = TRUE)
library(apeglm)
library(DESeq2)
library(tidyverse)
library(VennDiagram)
library(vsn)
xp_design <- data.frame(temp = factor(c("Amb", "Amb", "Amb", "Amb", "Amb", "Amb",
"Elev", "Elev", "Elev")),
day = factor(c(0, 0, 0, 2, 2, 2, 2, 2, 2)))
deseq_analysis(kallisto_path = "../output/kallisto_matrices/cbaihemat_transcriptome2.0/elev2_vs_amb02_indiv_only/kallisto.isoform.counts.matrix",
experiment_table = exp_design,
output_path = "../graphs/DESeq2_output/testdir",
variable = "temp")
deseq_analysis(kallisto_path = "../output/kallisto_matrices/cbaihemat_transcriptomev2.0/elev2_vs_amb02_indiv_only/kallisto.isoform.counts.matrix",
experiment_table = exp_design,
output_path = "../graphs/DESeq2_output/testdir",
variable = "temp")
kallisto_path <- "../output/kallisto_matrices/hemat_transcriptomev1.6/elev0_vs_elev2_indiv/kallisto.isoform.counts.matrix"
exp_design <- data.frame(temp = factor(c("Amb", "Amb", "Amb",
"Elev", "Elev", "Elev")),
day = factor(c(0, 0, 0, 2, 2, 2)))
experiment_table <- exp_design
View(experiment_table)
output_path = <- "../graphs/DESeq2_output/hemat_transcriptomev1.6/elev0_vs_elev2_indiv"
output_path <- "../graphs/DESeq2_output/hemat_transcriptomev1.6/elev0_vs_elev2_indiv"
variable <- "temp"
View(xp_design)
kallisto_path <- "../output/kallisto_matrices/hemat_transcriptomev1.6/elev0_vs_elev2_indiv/kallisto.isoform.counts.matrix"
exp_design <- data.frame(temp = factor(c("Amb", "Amb", "Amb",
"Elev", "Elev", "Elev")),
day = factor(c(0, 0, 0, 2, 2, 2)))
experiment_table <- exp_design
output_path <- "../graphs/DESeq2_output/hemat_transcriptomev1.6/elev0_vs_elev2_indiv"
variable <- "temp"
# Read in matrix created by Trinity from Kallisto outputs
data <- read.table(kallisto_path, header = TRUE,
sep = "\t")
View(data)
# Rename first column
names(data)[1] <- "target_ID"
# Set row names equal to the first column
rownames(data) <- data$target_ID
View(data)
# Remove the now-irrelevant first column
data <- data[,-1]
# Make sure everything looks okay
print("HEAD")
print(head(data))
print("STRUCTURE")
print(str(data))
deseq_analysis(kallisto_path = "../output/kallisto_matrices/hemat_transcriptomev1.6/elev0_vs_elev2_indiv/kallisto.isoform.counts.matrix",
experiment_table = exp_design,
output_path = "../graphs/DESeq2_output/hemat_transcriptomev1.6/elev0_vs_elev2_indiv",
variable = "temp")
# Functions are defined in hematodinium_analysis_functions.R
source("hematodinium_analysis_functions.R")
deseq_analysis(kallisto_path = "../output/kallisto_matrices/hemat_transcriptomev1.6/elev0_vs_elev2_indiv/kallisto.isoform.counts.matrix",
experiment_table = exp_design,
output_path = "../graphs/DESeq2_output/hemat_transcriptomev1.6/elev0_vs_elev2_indiv",
variable = "temp")
print(head(data))
View(data)
# Rename rows to correspond to library numbers
rownames(experiment_table) <- colnames(data)
# Check that experiment_table appears to match columns with matrix from Trinity
print("EXPERIMENTAL DESIGN")
print(experiment_table)
# Read in matrix created by Trinity from Kallisto outputs
data <- read.table(kallisto_path, header = TRUE,
sep = "\t")
# Rename first column
names(data)[1] <- "target_ID"
# Set row names equal to the first column
rownames(data) <- data$target_ID
# Remove the now-irrelevant first column
data <- data[,-1]
# Make sure everything looks okay
print("HEAD")
print(head(data))
print("STRUCTURE")
print(str(data))
# Round counts to integers - needed for DESeqDataSetFromMatrix()
data <- round(data, digits = 0)
# Rename rows to correspond to library numbers
rownames(experiment_table) <- colnames(data)
# Check that experiment_table appears to match columns with matrix from Trinity
print("EXPERIMENTAL DESIGN")
print(experiment_table)
exp_design <- data.frame(temp = factor(c("Amb", "Amb", "Amb",
"Elev", "Elev", "Elev")),
day = factor(c(0, 0, 0, 2, 2, 2)))
deseq_analysis(kallisto_path = "../output/kallisto_matrices/hemat_transcriptomev1.6/elev0_vs_elev2_indiv/kallisto.isoform.counts.matrix",
experiment_table = exp_design,
output_path = "../graphs/DESeq2_output/hemat_transcriptomev1.6/elev0_vs_elev2_indiv",
variable = "temp")
# Read in matrix created by Trinity from Kallisto outputs
data <- read.table(kallisto_path, header = TRUE,
sep = "\t")
# Rename first column
names(data)[1] <- "target_ID"
# Set row names equal to the first column
rownames(data) <- data$target_ID
# Remove the now-irrelevant first column
data <- data[,-1]
# Make sure everything looks okay
print("HEAD")
print(head(data))
print("STRUCTURE")
print(str(data))
# Round counts to integers - needed for DESeqDataSetFromMatrix()
data <- round(data, digits = 0)
# Rename rows to correspond to library numbers
rownames(experiment_table) <- colnames(data)
# Check that experiment_table appears to match columns with matrix from Trinity
print("EXPERIMENTAL DESIGN")
print(experiment_table)
knitr::opts_chunk$set(echo = TRUE)
library(apeglm)
library(DESeq2)
library(tidyverse)
library(VennDiagram)
library(vsn)
# Functions are defined in hematodinium_analysis_functions.R
source("hematodinium_analysis_functions.R")
exp_design <- data.frame(temp = factor(c("Amb", "Amb", "Amb",
"Elev", "Elev", "Elev")),
day = factor(c(0, 0, 0, 2, 2, 2)))
deseq_analysis(kallisto_path = "../output/kallisto_matrices/hemat_transcriptomev1.6/elev0_vs_elev2_indiv/kallisto.isoform.counts.matrix",
experiment_table = exp_design,
output_path = "../graphs/DESeq2_output/hemat_transcriptomev1.6/elev0_vs_elev2_indiv",
variable = "temp")
kallisto_path <- "../output/kallisto_matrices/hemat_transcriptomev1.6/elev0_vs_elev2_indiv/kallisto.isoform.counts.matrix"
experiment_table <- exp_design
output_path <- "../graphs/DESeq2_output/hemat_transcriptomev1.6/elev0_vs_elev2_indiv"
variable <- "temp"
# Read in matrix created by Trinity from Kallisto outputs
data <- read.table(kallisto_path, header = TRUE,
sep = "\t")
# Rename first column
names(data)[1] <- "target_ID"
# Set row names equal to the first column
rownames(data) <- data$target_ID
# Remove the now-irrelevant first column
data <- data[,-1]
# Make sure everything looks okay
print("HEAD")
print(head(data))
print("STRUCTURE")
print(str(data))
# Round counts to integers - needed for DESeqDataSetFromMatrix()
data <- round(data, digits = 0)
# Rename rows to correspond to library numbers
rownames(experiment_table) <- colnames(data)
# Check that experiment_table appears to match columns with matrix from Trinity
print("EXPERIMENTAL DESIGN")
print(experiment_table)
exp_design <- data.frame(temp = factor(c("Amb", "Amb", "Amb",
"Elev", "Elev", "Elev")),
day = factor(c(0, 0, 0, 2, 2, 2)))
deseq_analysis(kallisto_path = "../output/kallisto_matrices/hemat_transcriptomev1.6/elev0_vs_elev2_indiv/kallisto.isoform.counts.matrix",
experiment_table = exp_design,
output_path = "../graphs/DESeq2_output/hemat_transcriptomev1.6/elev0_vs_elev2_indiv",
variable = "temp")
getwd()
exp_design <- data.frame(temp = factor(c("Amb", "Amb", "Amb",
"Elev", "Elev", "Elev")),
day = factor(c(0, 0, 0, 2, 2, 2)))
deseq_analysis(kallisto_path = "../output/kallisto_matrices/hemat_transcriptomev1.6/elev0_vs_elev2_indiv/kallisto.isoform.counts.matrix",
experiment_table = exp_design,
output_path = "../graphs/DESeq2_output/hemat_transcriptomev1.6/elev0_vs_elev2_indiv",
variable = "temp")
setwd("C:/Users/acoyl/Documents/GitHub/hemat_bairdi_transcriptome/scripts")
getwd()
exp_design <- data.frame(temp = factor(c("Amb", "Amb", "Amb",
"Elev", "Elev", "Elev")),
day = factor(c(0, 0, 0, 2, 2, 2)))
deseq_analysis(kallisto_path = "../output/kallisto_matrices/hemat_transcriptomev1.6/elev0_vs_elev2_indiv/kallisto.isoform.counts.matrix",
experiment_table = exp_design,
output_path = "../graphs/DESeq2_output/hemat_transcriptomev1.6/elev0_vs_elev2_indiv",
variable = "temp")
data <- read.table(file = "../output/kallisto_matrices/hemat_transcriptomev1.6/elev0_vs_elev2_indiv/kallisto.isoform.counts.matrix",
header = TRUE,
sep = "\t")
View(data)
library(apeglm)
library(DESeq2)
library(tidyverse)
library(VennDiagram)
library(vsn)
# Functions are defined in hematodinium_analysis_functions.R
source("hematodinium_analysis_functions.R")
exp_design <- data.frame(temp = factor(c("Amb", "Amb", "Amb",
"Elev", "Elev", "Elev")),
day = factor(c(0, 0, 0, 2, 2, 2)))
deseq_analysis(kallisto_path = "../output/kallisto_matrices/hemat_transcriptomev1.6/elev0_vs_elev2_indiv/kallisto.isoform.counts.matrix",
experiment_table = exp_design,
output_path = "../graphs/DESeq2_output/hemat_transcriptomev1.6/elev0_vs_elev2_indiv",
variable = "temp")
data <- read.table(file = "../output/kallisto_matrices/hemat_transcriptomev1.6/elev0_vs_elev2_indiv/kallisto.isoform.counts.matrix",
header = TRUE,
sep = "\t")
View(data)
View(data)
View(data)
# Functions are defined in hematodinium_analysis_functions.R
source("hematodinium_analysis_functions.R")
exp_design <- data.frame(temp = factor(c("Amb", "Amb", "Amb",
"Elev", "Elev", "Elev")),
day = factor(c(0, 0, 0, 2, 2, 2)))
deseq_analysis(kallisto_path = "../output/kallisto_matrices/hemat_transcriptomev1.6/elev0_vs_elev2_indiv/kallisto.isoform.counts.matrix",
experiment_table = exp_design,
output_path = "../graphs/DESeq2_output/hemat_transcriptomev1.6/elev0_vs_elev2_indiv",
variable = "temp")
knitr::opts_chunk$set(echo = TRUE)
exp_design <- data.frame(temp = factor(c("Amb", "Amb", "Amb", "Amb", "Amb", "Amb",
"Elev", "Elev", "Elev")),
day = factor(c(0, 0, 0, 2, 2, 2, 2, 2, 2)))
deseq_analysis(kallisto_path = "../output/kallisto_matrices/cbaihemat_transcriptomev2.0/elev2_vs_amb02_indiv_only/kallisto.isoform.counts.matrix",
experiment_table = exp_design,
output_path = "../graphs/DESeq2_output/cbaihemat_transcriptomev2.0/elev2_vs_amb02_indiv_only",
variable = "temp")
# Functions are defined in hematodinium_analysis_functions.R
source("hematodinium_analysis_functions.R")
exp_design <- data.frame(temp = factor(c("Amb", "Amb", "Amb",
"Elev", "Elev", "Elev")),
day = factor(c(0, 0, 0, 2, 2, 2)))
data <- read.table(file = "../output/kallisto_matrices/hemat_transcriptomev1.6/elev0_vs_elev2_indiv/kallisto.isoform.counts.matrix",
header = TRUE,
sep = "\t")
deseq_analysis(kallisto_path = "../output/kallisto_matrices/hemat_transcriptomev1.6/elev0_vs_elev2_indiv/kallisto.isoform.counts.matrix",
experiment_table = exp_design,
output_path = "../graphs/DESeq2_output/hemat_transcriptomev1.6/elev0_vs_elev2_indiv",
variable = "temp")
kallisto_path <- "../output/kallisto_matrices/hemat_transcriptomev1.6/elev0_vs_elev2_indiv/kallisto.isoform.counts.matrix"
experiment_table <- exp_design
output_path <- "../graphs/DESeq2_output/hemat_transcriptomev1.6/elev0_vs_elev2_indiv"
variable <- "temp"
# Read in matrix created by Trinity from Kallisto outputs
data <- read.table(kallisto_path, header = TRUE,
sep = "\t")
# Rename first column
names(data)[1] <- "target_ID"
# Set row names equal to the first column
rownames(data) <- data$target_ID
# Remove the now-irrelevant first column
data <- data[,-1]
# Make sure everything looks okay
print("HEAD")
print(head(data))
print("STRUCTURE")
print(str(data))
# Round counts to integers - needed for DESeqDataSetFromMatrix()
data <- round(data, digits = 0)
# Rename rows to correspond to library numbers
rownames(experiment_table) <- colnames(data)
# Check that experiment_table appears to match columns with matrix from Trinity
print("EXPERIMENTAL DESIGN")
print(experiment_table)
# Create DESeq object that looks at effect of variable
deseq2.dds <- DESeqDataSetFromMatrix(countData = (data),
colData = experiment_table,
design = as.formula(paste0("~", variable)))
deseq2.dds <- DESeq(deseq2.dds)
#Look at results
deseq2.res <- results(deseq2.dds)
print("SUMMARY:")
print(summary(deseq2.res))
# Shrink LFC estimates - used in shrunken MA plot
lfcnames <- resultsNames(deseq2.dds)
print(lfcnames[2])
resLFC <- lfcShrink(deseq2.dds, coef = lfcnames[2],
type = "apeglm")
# Look specifically at results w/ adjusted p-value < 0.05
deseq_res05 <- results(deseq2.dds, alpha = 0.05)
print("Number of DEGs (padj <= 0.05)")
print(sum(deseq_res05$padj < 0.05, na.rm = TRUE))
# Plot of full results, not shrunken
plotMA(deseq2.res, ylim = c(-28, 28))
# Plot of full results, shrunken
plotMA(resLFC, ylim = c(-2, 2), main = "apeglm")
# Plot of res05 results, not shrunken
plotMA(deseq_res05, ylim = c(-20, 20))
# Create a plot of Log2 fold change vs. normalized counts
deseq2_tmp <- deseq2.res
plot(deseq2_tmp$baseMean, deseq2_tmp$log2FoldChange, pch = 20,
cex = 0.45, ylim = c(-28, 28), log = "x", col = "darkgray",
main = paste("Differences by", variable, "(padj <= 0.005)"),
xlab = "mean of normalized counts",
ylab = "Log2 Fold Change")
# Get significant points, plot again so they're a diff color
deseq2_tmp.sig <- deseq2.res[!is.na(deseq2.res$padj) &
deseq2.res$padj <= 0.005, ]
points(deseq2_tmp.sig$baseMean, deseq2_tmp.sig$log2FoldChange,
pch = 20, cex = 0.45, col = "red")
abline(h=c(-1,1), col = "blue")
# Plot PCA of samples
# Transform values
vsd <- vst(deseq2.dds, blind = FALSE)
# Plot dispersion estimates
plotDispEsts(deseq2.dds)
# write all genes to table
write.table(deseq2_tmp, file.path(output_path, "AllGenes.txt"),
row.names = TRUE, col.names = FALSE,
quote = FALSE, sep = "\t")
write.table(deseq2_tmp, file.path(output_path, "AllGenes_wcols.txt"),
row.names = TRUE, col.names = TRUE,
quote = FALSE, sep = "\t")
# Write significant day-differing genes to table
write.table(deseq2_tmp.sig, file.path(output_path, "DEGlist.txt"),
row.names = TRUE, col.names = FALSE, quote = FALSE,
sep = "\t")
write.table(deseq2_tmp.sig, file.path(output_path, "DEGlist_wcols.txt"),
row.names = TRUE, col.names = TRUE, quote = FALSE,
sep = "\t")
exp_design <- data.frame(temp = factor(c("amb", "amb", "amb",
"elev", "elev", "elev")),
day = factor(c(2, 2, 2,
2, 2, 2)))
deseq_analysis(kallisto_path = "../output/kallisto_matrices/hemat_transcriptomev1.6/amb2_vs_elev2_indiv/kallisto.isoform.counts.matrix",
experiment_table = exp_design,
output_path = "../graphs/DESeq2_output/hemat_transcriptomev1.6/amb2_vs_elev2_indiv",
variable = "temp")
deseq_analysis(kallisto_path = "../output/kallisto_matrices/hemat_transcriptomev1.6/elev0_vs_elev2_indiv/kallisto.isoform.counts.matrix",
experiment_table = exp_design,
output_path = "../graphs/DESeq2_output/hemat_transcriptomev1.6/elev0_vs_elev2_indiv",
variable = "temp")
# Rather than using the deseq_analysis() function, we will run that function directly.
# Due to low numbers of normalized counts, the function returns an error when ran.
# This will be avoided by removing the call to DESeq2::vst(), which performs the analysis
# necessary for our PCA plot. Therefore, our output will lack a PCA plot, but will be
# otherwise unchanged.
exp_design <- data.frame(temp = factor(c("Amb", "Amb", "Amb",
"Elev", "Elev", "Elev")),
day = factor(c(0, 0, 0, 2, 2, 2)))
kallisto_path <- "../output/kallisto_matrices/hemat_transcriptomev1.6/elev0_vs_elev2_indiv/kallisto.isoform.counts.matrix"
experiment_table <- exp_design
output_path <- "../graphs/DESeq2_output/hemat_transcriptomev1.6/elev0_vs_elev2_indiv"
variable <- "temp"
# Read in matrix created by Trinity from Kallisto outputs
data <- read.table(kallisto_path, header = TRUE,
sep = "\t")
# Rename first column
names(data)[1] <- "target_ID"
# Set row names equal to the first column
rownames(data) <- data$target_ID
# Remove the now-irrelevant first column
data <- data[,-1]
# Make sure everything looks okay
print("HEAD")
print(head(data))
print("STRUCTURE")
print(str(data))
# Round counts to integers - needed for DESeqDataSetFromMatrix()
data <- round(data, digits = 0)
# Rename rows to correspond to library numbers
rownames(experiment_table) <- colnames(data)
# Check that experiment_table appears to match columns with matrix from Trinity
print("EXPERIMENTAL DESIGN")
print(experiment_table)
# Create DESeq object that looks at effect of variable
deseq2.dds <- DESeqDataSetFromMatrix(countData = (data),
colData = experiment_table,
design = as.formula(paste0("~", variable)))
deseq2.dds <- DESeq(deseq2.dds)
#Look at results
deseq2.res <- results(deseq2.dds)
print("SUMMARY:")
print(summary(deseq2.res))
# Shrink LFC estimates - used in shrunken MA plot
lfcnames <- resultsNames(deseq2.dds)
print(lfcnames[2])
resLFC <- lfcShrink(deseq2.dds, coef = lfcnames[2],
type = "apeglm")
# Look specifically at results w/ adjusted p-value < 0.05
deseq_res05 <- results(deseq2.dds, alpha = 0.05)
print("Number of DEGs (padj <= 0.05)")
print(sum(deseq_res05$padj < 0.05, na.rm = TRUE))
# Plot of full results, not shrunken
plotMA(deseq2.res, ylim = c(-28, 28))
dev.copy(png, file.path(output_path, "allres_MAplot.png"))
dev.off()
# Plot of full results, shrunken
plotMA(resLFC, ylim = c(-2, 2), main = "apeglm")
dev.copy(png, file.path(output_path, "allres_shrunken_MAplot.png"))
dev.off()
# Plot of res05 results, not shrunken
plotMA(deseq_res05, ylim = c(-20, 20))
dev.copy(png, file.path(output_path, "res05_MAplot.png"))
dev.off()
# Create a plot of Log2 fold change vs. normalized counts
deseq2_tmp <- deseq2.res
plot(deseq2_tmp$baseMean, deseq2_tmp$log2FoldChange, pch = 20,
cex = 0.45, ylim = c(-28, 28), log = "x", col = "darkgray",
main = paste("Differences by", variable, "(padj <= 0.005)"),
xlab = "mean of normalized counts",
ylab = "Log2 Fold Change")
# Get significant points, plot again so they're a diff color
deseq2_tmp.sig <- deseq2.res[!is.na(deseq2.res$padj) &
deseq2.res$padj <= 0.005, ]
points(deseq2_tmp.sig$baseMean, deseq2_tmp.sig$log2FoldChange,
pch = 20, cex = 0.45, col = "red")
abline(h=c(-1,1), col = "blue")
dev.copy(png, file.path(output_path, "normalizedcts_v_log2foldchange.png"))
dev.off()
# Plot dispersion estimates
plotDispEsts(deseq2.dds)
dev.copy(png, file.path(output_path, "dispersion_estimates.png"))
dev.off()
# write all genes to table
write.table(deseq2_tmp, file.path(output_path, "AllGenes.txt"),
row.names = TRUE, col.names = FALSE,
quote = FALSE, sep = "\t")
write.table(deseq2_tmp, file.path(output_path, "AllGenes_wcols.txt"),
row.names = TRUE, col.names = TRUE,
quote = FALSE, sep = "\t")
# Write significant day-differing genes to table
write.table(deseq2_tmp.sig, file.path(output_path, "DEGlist.txt"),
row.names = TRUE, col.names = FALSE, quote = FALSE,
sep = "\t")
write.table(deseq2_tmp.sig, file.path(output_path, "DEGlist_wcols.txt"),
row.names = TRUE, col.names = TRUE, quote = FALSE,
sep = "\t")
exp_design <- data.frame(temp = factor(c("amb", "amb", "amb",
"elev", "elev", "elev")),
day = factor(c(2, 2, 2,
2, 2, 2)))
deseq_analysis(kallisto_path = "../output/kallisto_matrices/hemat_transcriptomev1.6/amb2_vs_elev2_indiv/kallisto.isoform.counts.matrix",
experiment_table = exp_design,
output_path = "../graphs/DESeq2_output/hemat_transcriptomev1.6/amb2_vs_elev2_indiv",
variable = "temp")
# Elevated Day 0 vs. Elevated Day 2
transcripts_to_geneIDs(deseq_filepath = "../graphs/DESeq2_output/hemat_transcriptomev1.6/elev0_vs_elev2_indiv/DEGlist_wcols.txt",
blast_filepath = "../data/cbai_hemat_diamond_blastx_table_transcriptome_v2.0.txt",
output_path = "../output/accession_n_GOids/hemat_transcriptomev1.6/DEG_IDs/elev0_vs_elev2_indiv_DEG_IDs.txt")
# Ambient Day 2 vs. Elevated Day 2
transcripts_to_geneIDs(deseq_filepath = "../graphs/DESeq2_output/hemat_transcriptomev1.6/amb2_vs_elev2_indiv/DEGlist_wcols.txt",
blast_filepath = "../data/cbai_hemat_diamond_blastx_table_transcriptome_v2.0.txt",
output_path = "../output/accession_n_GOids/hemat_transcriptomev1.6/DEG_IDs/amb2_vs_elev2_indiv_DEG_IDs.txt")
# Elevated Day 0 vs. Elevated Day 2
transcripts_to_geneIDs(deseq_filepath = "../graphs/DESeq2_output/hemat_transcriptomev1.6/elev0_vs_elev2_indiv/AllGenes_wcols.txt",
blast_filepath = "../data/cbai_hemat_diamond_blastx_table_transcriptome_v2.0.txt",
output_path = "../output/accession_n_GOids/hemat_transcriptomev1.6/allgenes_IDs/elev0_vs_elev2_indiv_All_GeneIDs.txt")
# Ambient Day 2 vs. Elevated Day 2
transcripts_to_geneIDs(deseq_filepath = "../graphs/DESeq2_output/hemat_transcriptomev1.6/amb2_vs_elev2_indiv/AllGenes_wcols.txt",
blast_filepath = "../data/cbai_hemat_diamond_blastx_table_transcriptome_v2.0.txt",
output_path = "../output/accession_n_GOids/hemat_transcriptomev1.6/allgenes_IDs/amb2_vs_elev2_indiv_All_GeneIDs.txt")
knitr::opts_chunk$set(echo = TRUE)
# Elevated Day 0 vs. Elevated Day 2. Individual libraries
uniprot_to_GO(accession_path = "../output/accession_n_GOids/hemat_transcriptomev1.6/allgenes_IDs/elev0_vs_elev2_indiv_All_GeneIDs.txt",
swissprot_path = "../data/all_uniprot_info_inc_GOterms.tab",
output_path = "../output/accession_n_GOids/hemat_transcriptomev1.6/allgenes_IDs/elev0_vs_elev2_indiv_All_GOIDs.txt")
# Ambient Day 2 vs. Elevated Day 2. Individual libraries
uniprot_to_GO(accession_path = "../output/accession_n_GOids/hemat_transcriptomev1.6/allgenes_IDs/amb2_vs_elev2_indiv_All_GeneIDs.txt",
swissprot_path = "../data/all_uniprot_info_inc_GOterms.tab",
output_path = "../output/accession_n_GOids/hemat_transcriptomev1.6/allgenes_IDs/amb2_vs_elev2_indiv_All_GOIDs.txt")
