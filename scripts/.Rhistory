fontsize = 9)
hc <- out$tree_row
lbl <- cutree(hc, clusters) # split dendrogram into the number of groups specified above
# Loop through gene clusters, printing heatmap for each
for (i in 1:clusters) {
clust <- f.crabdat[which(lbl==i) %>% names(), ]
# Write results to table
write.table(clust, file = paste0(crab_out,
"cluster_",
i, ".txt"),
sep = "\t",
row.names = TRUE)
# Create heat map for each cluster
png(paste0(crab_out, "cluster_", i, "_heatmap.png"))
print(pheatmap(clust, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = paste0("gene counts by day, cluster ", i),
fontsize = 9))
dev.off()
}
# Set path to output folder that will contain all heatmaps and text files for Crab C
crab_out <- paste0(heatmap_output, "Crab_C/")
# Read in data
crabdat <- read.delim(file = paste0(TPM_outpath,
"Crab_",
crabs[3],
"_TPMcts.txt"),
row.names = 1)
# Drop any genes with less than 5 counts across all 3 samples
keep <- rowSums(crabdat) >= 5
f.crabdat <- crabdat[keep, ]
print(paste("# of genes remaining after pre-filtering:", nrow(f.crabdat)))
print(paste("# of genes dropped:", nrow(crabdat) - nrow(f.crabdat), sep = " "))
pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
png(paste0(crab_out, "heatmap.png"))
pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
dev.off()
png(paste0(crab_out, "heatmap.png"))
pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
dev.off()
pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
# SPECIFY NUMBER OF CLUSTERS
clusters <- 8
# Extract gene clusters
out <- pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
hc <- out$tree_row
lbl <- cutree(hc, clusters) # split dendrogram into the number of groups specified above
# Loop through gene clusters, printing heatmap for each
for (i in 1:clusters) {
clust <- f.crabdat[which(lbl==i) %>% names(), ]
# Write results to table
write.table(clust, file = paste0(crab_out,
"cluster_",
i, ".txt"),
sep = "\t",
row.names = TRUE)
# Create heat map for each cluster
png(paste0(crab_out, "cluster_", i, "_heatmap.png"))
print(pheatmap(clust, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = paste0("gene counts by day, cluster ", i),
fontsize = 9))
dev.off()
}
# Set path to output folder that will contain all heatmaps and text files for Crab E
crab_out <- paste0(heatmap_output, "Crab_E/")
# Read in data
crabdat <- read.delim(file = paste0(TPM_outpath,
"Crab_",
crabs[4],
"_TPMcts.txt"),
row.names = 1)
# Drop any genes with less than 5 counts across all 3 samples
keep <- rowSums(crabdat) >= 5
f.crabdat <- crabdat[keep, ]
print(paste("# of genes remaining after pre-filtering:", nrow(f.crabdat)))
print(paste("# of genes dropped:", nrow(crabdat) - nrow(f.crabdat), sep = " "))
# Construct heat map
pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
png(paste0(crab_out, "heatmap.png"))
pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
dev.off()
png(paste0(crab_out, "heatmap.png"))
pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
dev.off()
# SPECIFY NUMBER OF CLUSTERS
clusters <- 6
# Extract gene clusters
out <- pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
hc <- out$tree_row
lbl <- cutree(hc, clusters) # split dendrogram into the number of groups specified above
# Loop through gene clusters, printing heatmap for each
for (i in 1:clusters) {
clust <- f.crabdat[which(lbl==i) %>% names(), ]
# Write results to table
write.table(clust, file = paste0(crab_out,
"cluster_",
i, ".txt"),
sep = "\t",
row.names = TRUE)
# Create heat map for each cluster
png(paste0(crab_out, "cluster_", i, "_heatmap.png"))
print(pheatmap(clust, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = paste0("gene counts by day, cluster ", i),
fontsize = 9))
dev.off()
}
# Set path to output folder that will contain all heatmaps and text files for Crab G
crab_out <- paste0(heatmap_output, "Crab_G/")
# Read in data
crabdat <- read.delim(file = paste0(TPM_outpath,
"Crab_",
crabs[5],
"_TPMcts.txt"),
row.names = 1)
# Drop any genes with less than 5 counts across all 3 samples
keep <- rowSums(crabdat) >= 5
f.crabdat <- crabdat[keep, ]
print(paste("# of genes remaining after pre-filtering:", nrow(f.crabdat)))
print(paste("# of genes dropped:", nrow(crabdat) - nrow(f.crabdat), sep = " "))
pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
as
5+4
getwd()
pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
png(paste0(crab_out, "heatmap.png"))
pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
dev.off()
png(paste0(crab_out, "heatmap.png"))
pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
dev.off()
# SPECIFY NUMBER OF CLUSTERS
clusters <- 2
# Extract gene clusters
out <- pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
hc <- out$tree_row
lbl <- cutree(hc, clusters) # split dendrogram into the number of groups specified above
# Loop through gene clusters, printing heatmap for each
for (i in 1:clusters) {
clust <- f.crabdat[which(lbl==i) %>% names(), ]
# Write results to table
write.table(clust, file = paste0(crab_out,
"cluster_",
i, ".txt"),
sep = "\t",
row.names = TRUE)
# Create heat map for each cluster
png(paste0(crab_out, "cluster_", i, "_heatmap.png"))
print(pheatmap(clust, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = paste0("gene counts by day, cluster ", i),
fontsize = 9))
dev.off()
}
# Set path to output folder that will contain all heatmaps and text files for Crab H
crab_out <- paste0(heatmap_output, "Crab_H/")
# Read in data
crabdat <- read.delim(file = paste0(TPM_outpath,
"Crab_",
crabs[6],
"_TPMcts.txt"),
row.names = 1)
# Drop any genes with less than 5 counts across all 3 samples
keep <- rowSums(crabdat) >= 5
f.crabdat <- crabdat[keep, ]
print(paste("# of genes remaining after pre-filtering:", nrow(f.crabdat)))
print(paste("# of genes dropped:", nrow(crabdat) - nrow(f.crabdat), sep = " "))
# Construct heat map
pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
png(paste0(crab_out, "heatmap.png"))
pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
dev.off()
# SPECIFY NUMBER OF CLUSTERS
clusters <- 2
# Extract gene clusters
out <- pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
hc <- out$tree_row
lbl <- cutree(hc, clusters) # split dendrogram into the number of groups specified above
# Loop through gene clusters, printing heatmap for each
for (i in 1:clusters) {
clust <- f.crabdat[which(lbl==i) %>% names(), ]
# Write results to table
write.table(clust, file = paste0(crab_out,
"cluster_",
i, ".txt"),
sep = "\t",
row.names = TRUE)
# Create heat map for each cluster
png(paste0(crab_out, "cluster_", i, "_heatmap.png"))
print(pheatmap(clust, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = paste0("gene counts by day, cluster ", i),
fontsize = 9))
dev.off()
}
# Set path to output folder that will contain all heatmaps and text files for Crab I
crab_out <- paste0(heatmap_output, "Crab_I/")
# Read in data
crabdat <- read.delim(file = paste0(TPM_outpath,
"Crab_",
crabs[7],
"_TPMcts.txt"),
row.names = 1)
# Drop any genes with less than 5 counts across all 3 samples
keep <- rowSums(crabdat) >= 5
f.crabdat <- crabdat[keep, ]
print(paste("# of genes remaining after pre-filtering:", nrow(f.crabdat)))
print(paste("# of genes dropped:", nrow(crabdat) - nrow(f.crabdat), sep = " "))
pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
png(paste0(crab_out, "heatmap.png"))
pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
dev.off()
# SPECIFY NUMBER OF CLUSTERS
clusters <- 2
# Extract gene clusters
out <- pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
hc <- out$tree_row
lbl <- cutree(hc, clusters) # split dendrogram into the number of groups specified above
# Loop through gene clusters, printing heatmap for each
for (i in 1:clusters) {
clust <- f.crabdat[which(lbl==i) %>% names(), ]
# Write results to table
write.table(clust, file = paste0(crab_out,
"cluster_",
i, ".txt"),
sep = "\t",
row.names = TRUE)
# Create heat map for each cluster
png(paste0(crab_out, "cluster_", i, "_heatmap.png"))
print(pheatmap(clust, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = paste0("gene counts by day, cluster ", i),
fontsize = 9))
dev.off()
}
knitr::opts_chunk$set(echo = TRUE)
# Look at cluster heatmaps, designate each day within clusters as low, medium, or high. Order corresponds to order of clusters (ex: if Cluster 2 is high/low/medium, the second object in the vector should be "HLM")
clustorder <- c("LLH", "MHL", "HML")
# See if any duplicates are present in our clusters
any(duplicated(clustorder))
# Rename all heatmaps to include the cluster order
file.rename(paste0(crab_out, list.files(crab_out, pattern = "^cluster_.*heatmap\\.png$")),
paste0(crab_out, "cluster_", clustorder, "_heatmap.png"))
# Give IDs for all libraries for ambient-temperature crab. All these are infected crab.
crabA_libs <- c("178", "359", "463")
crabB_libs <- c("118", "349", "481")
crabC_libs <- c("132", "334", "485")
# For the sake of completeness, also giving IDs for all libraries for decreased-temperature crab. D and F are uninfected, E is infected. E and F libraries were only created using cbai_transcriptomev4.0 (since they are libraries of uninfected crab, a transcriptome of only C. bairdi genes is the only one used for alignment). When getting TPMs for libraries aligned to other transcriptomes, comment them out.
# crabD_libs <- c("073", "221", "427")
crabE_libs <- c("151", "254", "445")
# crabF_libs <- c("113", "222", "425")
# Give IDs for all libraries for elevated-temperature crab. Note: again, we have no libraries on Day 17 for these crabs
crabG_libs <- c("173", "272")
crabH_libs <- c("072", "294")
crabI_libs <- c("127", "280")
# Vector of crab IDs (all that aren't commented out above)
crabs <- c("A", "B", "C", "E", "G", "H", "I")
# Create a list of all crabs that aren't commented out above
crabIDs <- list(crabA_libs, crabB_libs, crabC_libs, crabE_libs, crabG_libs, crabH_libs, crabI_libs)
# Set path to location of kallisto libraries
libpath <- "../output/kallisto_libraries/cbaihemat_transcriptomev2.0/"
# Set path to TPM output folder
TPM_outpath <- "../output/TPM_counts/cbaihemat_transcriptomev2.0/"
# Set path to general heatmap output folder
heatmap_output <- "../output/manual_clustering/cbai_transcriptomev2.0/"
# Set path to output folder that will contain all heatmaps and text files for Crab A
crab_out <- paste0(heatmap_output, "Crab_A/")
# See if any duplicates are present in our clusters
any(duplicated(clustorder))
# Rename all heatmaps to include the cluster order
file.rename(paste0(crab_out, list.files(crab_out, pattern = "^cluster_.*heatmap\\.png$")),
paste0(crab_out, "cluster_", clustorder, "_heatmap.png"))
# Rename all cluster filenames to include cluster order
file.rename(paste0(crab_out, list.files(crab_out, pattern = "^cluster_.*\\.txt")),
paste0(crab_out, "cluster_",
clustorder, ".txt"))
# Set path to output folder that will contain all heatmaps and text files for Crab B
crab_out <- paste0(heatmap_output, "Crab_B/")
# Look at cluster heatmaps, designate each day within clusters as low, medium, or high. Order corresponds to order of clusters (ex: if Cluster 2 is high/low/medium, the second object in the vector should be "HLM")
clustorder <- c("LMH", "LHM", "HLH", "LHL", "HLL")
# See if any duplicates are present in our clusters
any(duplicated(clustorder))
# Rename all heatmaps to include the cluster order
file.rename(paste0(crab_out, list.files(crab_out, pattern = "^cluster_.*heatmap\\.png$")),
paste0(crab_out, "cluster_", clustorder, "_heatmap.png"))
# Rename all cluster filenames to include cluster order
file.rename(paste0(crab_out, list.files(crab_out, pattern = "^cluster_.*\\.txt")),
paste0(crab_out, "cluster_",
clustorder, ".txt"))
# Look at cluster heatmaps, designate each day within clusters as low, medium, or high. Order corresponds to order of clusters (ex: if Cluster 2 is high/low/medium, the second object in the vector should be "HLM")
clustorder <- c("LLH", "MLH", "HLM", "LHM", "MML", "HML", "LMH", "MHL")
# See if any duplicates are present in our clusters
any(duplicated(clustorder))
# Rename all heatmaps to include the cluster order
file.rename(paste0(crab_out, list.files(crab_out, pattern = "^cluster_.*heatmap\\.png$")),
paste0(crab_out, "cluster_", clustorder, "_heatmap.png"))
# Set path to output folder that will contain all heatmaps and text files for Crab C
crab_out <- paste0(heatmap_output, "Crab_C/")
# Rename all heatmaps to include the cluster order
file.rename(paste0(crab_out, list.files(crab_out, pattern = "^cluster_.*heatmap\\.png$")),
paste0(crab_out, "cluster_", clustorder, "_heatmap.png"))
# Rename all cluster filenames to include cluster order
file.rename(paste0(crab_out, list.files(crab_out, pattern = "^cluster_.*\\.txt")),
paste0(crab_out, "cluster_",
clustorder, ".txt"))
# Set path to output folder that will contain all heatmaps and text files for Crab E
crab_out <- paste0(heatmap_output, "Crab_E/")
# Set path to output folder that will contain all heatmaps and text files for Crab E
crab_out <- paste0(heatmap_output, "Crab_E/")
# Look at cluster heatmaps, designate each day within clusters as low, medium, or high. Order corresponds to order of clusters (ex: if Cluster 2 is high/low/medium, the second object in the vector should be "HLM")
clustorder <- c("LMM", "MLH", "HLM", "HML", "MHL", "MHM")
# See if any duplicates are present in our clusters
any(duplicated(clustorder))
# Rename all heatmaps to include the cluster order
file.rename(paste0(crab_out, list.files(crab_out, pattern = "^cluster_.*heatmap\\.png$")),
paste0(crab_out, "cluster_", clustorder, "_heatmap.png"))
# Rename all cluster filenames to include cluster order
file.rename(paste0(crab_out, list.files(crab_out, pattern = "^cluster_.*\\.txt")),
paste0(crab_out, "cluster_",
clustorder, ".txt"))
# Set path to output folder that will contain all heatmaps and text files for Crab G
crab_out <- paste0(heatmap_output, "Crab_G/")
# Look at cluster heatmaps, designate each day within clusters as low, medium, or high. Order corresponds to order of clusters (ex: if Cluster 2 is high/low/medium, the second object in the vector should be "HLM")
clustorder <- c("LH", "HL")
# See if any duplicates are present in our clusters
any(duplicated(clustorder))
# Rename all heatmaps to include the cluster order
file.rename(paste0(crab_out, list.files(crab_out, pattern = "^cluster_.*heatmap\\.png$")),
paste0(crab_out, "cluster_", clustorder, "_heatmap.png"))
# Rename all cluster filenames to include cluster order
file.rename(paste0(crab_out, list.files(crab_out, pattern = "^cluster_.*\\.txt")),
paste0(crab_out, "cluster_",
clustorder, ".txt"))
# Set path to output folder that will contain all heatmaps and text files for Crab H
crab_out <- paste0(heatmap_output, "Crab_H/")
# Look at cluster heatmaps, designate each day within clusters as low, medium, or high. Order corresponds to order of clusters (ex: if Cluster 2 is high/low/medium, the second object in the vector should be "HLM")
clustorder <- c("LH", "HL")
# See if any duplicates are present in our clusters
any(duplicated(clustorder))
# Rename all heatmaps to include the cluster order
file.rename(paste0(crab_out, list.files(crab_out, pattern = "^cluster_.*heatmap\\.png$")),
paste0(crab_out, "cluster_", clustorder, "_heatmap.png"))
# Rename all cluster filenames to include cluster order
file.rename(paste0(crab_out, list.files(crab_out, pattern = "^cluster_.*\\.txt")),
paste0(crab_out, "cluster_",
clustorder, ".txt"))
# Set path to output folder that will contain all heatmaps and text files for Crab I
crab_out <- paste0(heatmap_output, "Crab_I/")
# Look at cluster heatmaps, designate each day within clusters as low, medium, or high. Order corresponds to order of clusters (ex: if Cluster 2 is high/low/medium, the second object in the vector should be "HLM")
clustorder <- c("LH", "HL")
# See if any duplicates are present in our clusters
any(duplicated(clustorder))
# Rename all heatmaps to include the cluster order
file.rename(paste0(crab_out, list.files(crab_out, pattern = "^cluster_.*heatmap\\.png$")),
paste0(crab_out, "cluster_", clustorder, "_heatmap.png"))
# Rename all cluster filenames to include cluster order
file.rename(paste0(crab_out, list.files(crab_out, pattern = "^cluster_.*\\.txt")),
paste0(crab_out, "cluster_",
clustorder, ".txt"))
